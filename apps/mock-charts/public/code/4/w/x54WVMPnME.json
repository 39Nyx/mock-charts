{"code":"const getRandom = (n, m) => Math.round(Math.random() * (m - n) + n);\n\nconst getRandonData = (length) => {\n    let seriesData = [];\n    for (let i = 0; i < length; i++) {\n        let cate = [];\n        for (let j = 0; j < 20; j++) {\n            cate.push(getRandom(1, 50));\n        }\n        seriesData.push(cate.sort((a, b) => a - b));\n    }\n    return seriesData;\n};\n\n/**\n * @description 将接口数据转化为符合 echarts 的数据\n * @param {array} source 数据源\n * @param {boolean} diff 是否按AQI等级拆分数据\n * @returns echartsData 符合echarts配置数据\n */\nconst transformData = (xData, factor) => {\n    const xAxisData = xData.map((v) => v.name);\n    const seriesDatas = factor.map(() => getRandonData(xAxisData.length));\n    return {\n        xAxisData,\n        seriesDatas,\n    };\n};\n\nconst selected = [\n    { code: '320505001', name: '横塘街道' },\n    { code: '320505002', name: '狮山街道' },\n    { code: '320505003', name: '枫桥街道' },\n    { code: '320505004', name: '镇湖街道' },\n    { code: '320505005', name: '东渚街道' },\n    { code: '320505100', name: '浒墅关镇' },\n    { code: '320505101', name: '通安镇' },\n    { code: '320505407', name: '苏州科技城' },\n];\n\nconst legendData = [\"PM2.5\", \"PM10\", \"NO2\", \"SO2\", \"CO\", \"O3\"];\nconst { xAxisData, seriesDatas } = transformData(selected, legendData);\n\noption = {\n    legend: {\n        bottom: 0,\n    },\n    tooltip: {\n        trigger: 'item',\n        axisPointer: {\n            type: 'shadow',\n        },\n    },\n    grid: {\n        left: 50,\n        top: 15,\n        right: 15,\n        bottom: 65,\n    },\n    xAxis: {\n        type: 'category',\n        nameGap: 30,\n        splitArea: {\n            show: false,\n        },\n        splitLine: {\n            show: false,\n        },\n        axisLabel: {\n            interval: 0,\n        },\n        data: xAxisData,\n    },\n    yAxis: {\n        type: 'value',\n        splitArea: {\n            show: false,\n        },\n    },\n    series: legendData.map((v, i) => ({\n        name: v,\n        type: 'boxplot',\n        data: seriesDatas[i],\n    })),\n};\n"}