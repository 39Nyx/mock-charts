{"code":"var data = [\n    {name:\"1#电梯\",floorCount:6,nowFloor:4,type:0},//0停在某一楼层，1上行，2下行,还没做\n    {name:\"2#电梯\",floorCount:7,nowFloor:1,type:1},\n    {name:\"3#电梯\",floorCount:6,nowFloor:6,type:0},\n    {name:\"4#电梯\",floorCount:6,nowFloor:4,type:2},\n    {name:\"5#电梯\",floorCount:5,nowFloor:3,type:1}\n];\n\nfunction setSeries(){\n    var series = [],xData = [],MaxCount = 0;\n    for(let i = 0;i<data.length;i++){\n        xData.push(data[i][\"name\"]);\n        if(data[i][\"floorCount\"] > MaxCount) MaxCount = data[i][\"floorCount\"];\n    }\n    \n    for(let i = 1; i <= MaxCount;i++){\n        let bar = {\n            data: [],\n            type: 'bar',\n            color: 'rgba(7, 7, 7, 1)',\n            /*barGap: '-100%',//重叠*/\n            stack: 'one', //堆叠\n            barWidth: 50\n        };\n        let bar2 = {\n            type: 'bar',\n            stack: 'one', //堆叠\n            color: 'rgba(125, 125, 125, 0)',\n            barWidth: 50,\n            data: []\n        };\n        for(let j=0;j<data.length;j++){\n            if(i <= data[j].floorCount){\n                \n                bar.data.push(\n                    {   value : 7,\n                        itemStyle: {\n                            borderColor: 'rgba(150, 150, 150, .3)',\n                            borderWidth: '20',\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 0.7, [{\n                                    offset: 0,\n                                    color: i!=data[j][\"nowFloor\"] ?\"#087cf9\":\"#f51207\"\n                                },\n                                {\n                                    offset: 1,\n                                    color: i!=data[j][\"nowFloor\"] ?\"#09408a\":\"#e2746e\"\n                                }\n                            ])\n                        },\n                        label: {\n                            color: '#fff',\n                            show: true,\n                            position: 'inside',\n                            formatter: i+'F'\n            \n                        }\n                    }\n                );\n                bar2.data.push(2);\n            }else{\n                bar.data.push(null);\n                bar2.data.push(null);\n            }\n            \n        }\n        series.push(bar);\n        series.push(bar2);\n        \n    }\n    var option = {\n        backgroundColor: '#021228',//'#0494fc',\n        title: {\n            text: '',\n            textStyle: {\n                fontWeight: 'normal',\n                fontSize: 16,\n                color: '#fff'\n            }\n        },\n        tooltip: {\n            show: false\n        },\n        grid: {\n            top: 100,\n            left: 10,\n            right: 10,\n            bottom: 100\n        },\n    \n    \n        xAxis: {\n    \n            data:xData,\n            axisLine: {\n                lineStyle: {\n                    color: '#fff'\n                },\n                show:false\n            },\n            axisLabel: {\n                show:true,\n                fontSize:14\n            },\n            axisTick: {\n                show: false\n            }\n        },\n        yAxis: {\n            splitLine: {\n                show: false\n            },\n            axisLabel: {\n                show: false\n            },\n            axisTick: {\n                show: false\n            },\n            axisLine: {\n                show: false,\n            },\n        },\n        series: series\n    };\n    \n    myChart.setOption(option);\n};\n\nsetSeries();\n\nsetInterval(function() {\n\tfor(let i=0;i<data.length;i++){\n\t\tif(data[i].type === 1){\n\t\t\tif(data[i].nowFloor < data[i].floorCount){\n\t\t\t\tdata[i].nowFloor++;\n\t\t\t}else{\n\t\t\t\tdata[i].type = 2;\n\t\t\t}\n\t\t}\n\t\telse if(data[i].type === 2){\n\t\t\tif(data[i].nowFloor > 1){\n\t\t\t\tdata[i].nowFloor--;\n\t\t\t}else{\n\t\t\t\tdata[i].type = 1;\n\t\t\t}\n\t\t}\n\t}\n\tsetSeries();\n},2000);"}