{"code":"/**\r\n * 根据给定两个hex颜色和分割数量，得到颜色数组\r\n * @param {*} startColor #hex #fffff\r\n * @param {*} endColor #hex #000000\r\n * @param {*} _step 颜色分几步包括首尾\r\n * @return [ #fffff, rgba(), #000000 ]\r\n */\r\nfunction getGradientColorArr(startColor, endColor, _step) {\r\n  const step = _step - 2;\r\n  let result = [];\r\n  function hexToRgb(hex) {\r\n    var rgb = [];\r\n    for (var i = 1; i < 7; i += 2) {\r\n      rgb.push(parseInt('0x' + hex.slice(i, i + 2)));\r\n    }\r\n    return rgb;\r\n  }\r\n  //将hex转换为rgb\r\n  const sColor = hexToRgb(startColor);\r\n  const eColor = hexToRgb(endColor);\r\n  if (step > 0) {\r\n    //计算R\\G\\B每一步的差值\r\n    const rStep = (eColor[0] - sColor[0]) / step;\r\n    const gStep = (eColor[1] - sColor[1]) / step;\r\n    const bStep = (eColor[2] - sColor[2]) / step;\r\n\r\n    for (var i = 0; i < step; i++) {\r\n      //计算每一步的hex值\r\n      let r = parseInt(rStep * i + sColor[0]);\r\n      let g = parseInt(gStep * i + sColor[1]);\r\n      let b = parseInt(bStep * i + sColor[2]);\r\n      result.push(`rgba(${r},${g},${b},1)`);\r\n    }\r\n  }\r\n  result.push(endColor);\r\n  result.unshift(startColor);\r\n\r\n  return result;\r\n}\r\n\r\nlet data = [];\r\nlet xAxisData = [];\r\nlet gradientColorArr = getGradientColorArr('#2EFFF7', '#FFD02E', 100);\r\n\r\nfor (let i = 1; i < 101; i++) {\r\n  data.push({\r\n    value: Math.ceil(Math.random() * 100),\r\n    itemStyle: {\r\n      color: gradientColorArr[i - 1],\r\n    },\r\n  });\r\n  xAxisData.push(i);\r\n}\r\n\r\noption = {\r\n  backgroundColor: '#000',\r\n\r\n  grid: {\r\n  },\r\n  xAxis: {\r\n    type: 'category',\r\n    data: xAxisData,\r\n  },\r\n  yAxis: {\r\n    type: 'value',\r\n  },\r\n  series: [\r\n    {\r\n      name: '销售量',\r\n      type: 'bar',\r\n      data: data,\r\n    },\r\n  ],\r\n};\r\n"}