{"code":"let dataList = [\n\t\t{\n\t\t\t\"count\":\"100\",\n\t\t\t\"name\":\"A\"\n\t\t},\n\t\t{\n\t\t\t\"count\":\"90\",\n\t\t\t\"name\":\"B\"\n\t\t},\n\t\t{\n\t\t\t\"count\":\"80\",\n\t\t\t\"name\":\"C\"\n\t\t},\n\t\t{\n\t\t\t\"count\":\"70\",\n\t\t\t\"name\":\"D\"\n\t\t},\n\t\t{\n\t\t\t\"count\":\"50\",\n\t\t\t\"name\":\"E\"\n\t\t}\n\t]\nlet value = [];\nlet xData = [];\nlet maxValue = [];\nfor (const assetDeviceSafetyVo of dataList) {\n  value.push(assetDeviceSafetyVo.count);\n  maxValue.push(assetDeviceSafetyVo.count);\n  xData.push(assetDeviceSafetyVo.name);\n}\nmaxValue.fill(Math.max(...value)+20,0,value.length);\n\noption = {\n   tooltip: {\n            show: \"true\",\n            trigger: 'item',\n            backgroundColor: 'rgba(132,183,243,0.6)', // 背景\n            padding: [8, 10], //内边距\n            extraCssText: 'box-shadow: 0 0 3px rgba(255, 255, 255, 0.4);', //添加阴影\n            formatter: function(params) {\n                if (params.seriesName != \"\") {\n                    return params.name + ' ：' + params.value ;\n                }\n            },\n    \n          },\n          xAxis: [\n            {\n              type: 'category',\n              axisTick: {\n                  show: false\n              },\n              axisLine: {\n                  show: false,\n              },\n              axisLabel: {\n                  inside: false,\n                  textStyle: {\n                      color: '#999999',\n                      fontWeight: 'normal',\n                      fontSize: '12',\n                  },\n              },\n              data: xData,\n            }, \n            {\n              type: 'category',\n              axisTick: 'none',\n              axisLine: 'none',\n              show: true,\n              axisLabel: {\n                  textStyle: {\n                      color: '#999999',\n                      fontSize: '12'\n                  },\n              },\n              data: value\n            }\n          ],\n          yAxis: {\n              type: 'value',\n              axisTick: {\n                  show: false\n              },\n              axisLine: {\n                  show: false,\n              },\n              splitLine: {\n                  show: false,\n              },\n              axisLabel: {\n                  show:false,\n              },\n          },\n          series: [\n            {\n              type: 'bar',\n              itemStyle: {\n                  normal: {\n                     show: true,\n                    color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n                        offset: 0,\n                        color: '#9fd0e7'\n                    }, {\n                        offset: 1,\n                        color: 'rgb(46,200,207,1)'\n                    }]),\n                      borderWidth: 0,\n                  },\n                  emphasis: {\n                      shadowBlur: 15,\n                      shadowColor: 'rgba(159,208, 231, 0.7)'\n                  }\n              },\n            \n              zlevel: 2,\n              barWidth: '15',\n              data: value,\n            },\n            {\n              name: '',\n              type: 'bar',\n              xAxisIndex: 1,\n              zlevel: 1,\n              itemStyle: {\n                  normal: {\n                      color: '#f6f6f6',\n                      borderWidth: 0,\n                      shadowBlur: {\n                          shadowColor: '#f6f6f6',\n                          shadowBlur: 10,\n                          shadowOffsetX: 0,\n                          shadowOffsetY: 2,\n                      },\n                  },\n                  emphasis: {\n                    color: '#f6f6f6',\n                    shadowBlur: 15,\n                    shadowColor: '#f6f6f6bf'\n                  }\n              },\n              barWidth: '15',\n              data: maxValue\n            }\n          ]\n};\n"}