{"code":"var bgPatternImg = new Image();\nbgPatternImg.src = '/asset/get/s/data-1623324803979-ugSvPhTCK.png';\nconst chartData = [\n    {\n        value: 520,\n        name: 'A',\n    },\n    {\n        value: 280,\n        name: 'B',\n    },\n    {\n        value: 100,\n        name: 'C',\n    },\n    {\n        value: 100,\n        name: 'D',\n    },\n];\nconst colorList = [\n    new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n        {\n            offset: 0,\n            color: '#CA8CCA',\n        },\n        {\n            offset: 1,\n            color: '#EFA5BB',\n        },\n    ]),\n    new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n        {\n            offset: 0,\n            color: '#BFA4E4',\n        },\n        {\n            offset: 1,\n            color: '#E29CE2',\n        },\n    ]),\n    new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n        {\n            offset: 0,\n            color: '#A8AAE5',\n        },\n        {\n            offset: 1,\n            color: '#BEA3E3',\n        },\n    ]),\n    new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n        {\n            offset: 0,\n            color: '#A4D37D',\n        },\n        {\n            offset: 1,\n            color: '#E5F2A7',\n        },\n    ]),\n];\nconst sum = chartData.reduce((per, cur) => per + cur.value, 0);\nconst gap = (1 * sum) / 100;\nconst pieData1 = [];\nconst pieData2 = [];\nconst gapData = {\n    name: '',\n    value: gap,\n    itemStyle: {\n        color: 'transparent',\n    },\n};\nfor (let i = 0; i < chartData.length; i++) {\n    pieData1.push({\n        ...chartData[i],\n        itemStyle: {\n            borderRadius: 100,\n            shadowColor: '#2a2a34',\n            shadowBlur: 5,\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            borderColor: '#2a2a34',\n            borderWidth: 2,\n        },\n    });\n    pieData1.push(gapData);\n\n    pieData2.push({\n        ...chartData[i],\n        itemStyle: {\n            borderRadius: 10,\n            color: colorList[i],\n            opacity: 0.1,\n            shadowColor: '#000',\n            shadowBlur: 1,\n            shadowOffsetY: 5,\n            shadowOffsetX: 0,\n        },\n    });\n    pieData2.push(gapData);\n}\n\noption = {\n    backgroundColor: {\n        image: bgPatternImg,\n        repeat: 'repeat',\n    },\n    title: [{\n        text: '75.0%',\n        x: '50%',\n        y: '43%',\n        textAlign: 'center',\n        textStyle: {\n            fontSize: '40',\n            fontWeight: '500',\n            color: '#98b5d2',\n            textAlign: 'center',\n            textShadowColor: '#000',\n                textShadowBlur: '1',\n                textShadowOffsetX: 2,\n                textShadowOffsetY: 2,\n        },\n    }, {\n        text: 'DESIGN ELEMENTS',\n        left: '50%',\n        top: '52%',\n        textAlign: 'center',\n        textStyle: {\n            fontSize: '18',\n            fontWeight: '400',\n            color: '#5c5a68',\n            textAlign: 'center',\n            textShadowColor: '#000',\n                textShadowBlur: '1',\n                textShadowOffsetX: 1,\n                textShadowOffsetY: 1,\n        },\n    }, ],\n    legend: {\n        left: '10%',\n        top: '35%',\n        align: 'left',\n        itemGap: 18,\n        itemWidth: 20,\n        itemHeight: 20,\n        shadowBlur: 10,\n        shadowOffsetY: 0,\n        shadowOffsetX: 0,\n        borderColor: '#2a2a34',\n        borderWidth: 2,\n        textStyle: {\n            color: '#D8DDE3',\n            rich: {\n                name: {\n                    verticalAlign: 'right',\n                    align: 'left',\n                    fontSize: 18,\n                    color: '#D8DDE3',\n                },\n                percent: {\n                    padding: [0, 0, 0, 10],\n                    color: '#D8DDE3',\n                    fontSize: 18,\n                },\n            },\n        },\n        formatter: (name) => {\n            const item = chartData.find((i) => {\n                return i.name === name;\n            });\n            const p = ((item.value / sum) * 100).toFixed(0);\n            return '{name|' + name + '}' + '{percent|' + p + '}' + ' %';\n        },\n    },\n\n    color: colorList,\n\n    series: [\n        {\n            type: 'pie',\n            z: 3,\n            roundCap: true,\n            radius: ['44%', '51%'],\n            center: ['50%', '50%'],\n            label: {\n                show: false,\n            },\n            labelLine: {\n                show: false,\n            },\n            data: pieData1,\n        },\n        {\n            type: 'pie',\n            z: 2,\n            radius: ['40%', '55%'],\n            center: ['50%', '50%'],\n            label: {\n                show: false,\n            },\n            labelLine: {\n                show: false,\n            },\n            silent: true,\n            data: pieData2,\n        },\n    ],\n};\n"}