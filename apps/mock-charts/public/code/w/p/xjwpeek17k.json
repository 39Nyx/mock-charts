{"code":"\nvar data = [];\nvar dataCount = 10;\nvar startTime = +new Date();\nconsole.log(\"startTime =  \" + startTime);\nvar categories = ['categoryA', 'categoryB', 'categoryC'];\nvar types = [\n    {name: 'JS Heap', color: '#7b9ce1'},\n    {name: 'Documents', color: '#bd6d6c'},\n    {name: 'Nodes', color: '#75d874'},\n    {name: 'Listeners', color: '#e0bc78'},\n    {name: 'GPU Memory', color: '#dc77dc'},\n    {name: 'GPU', color: '#72b362'}\n];\n\n// Generate mock data\necharts.util.each(categories, function (category, index) {\n    var baseTime = startTime;\n    for (var i = 0; i < dataCount; i++) {\n        var typeItem = types[Math.round(Math.random() * (types.length - 1))];\n        var duration = Math.round(Math.random() * 10000);\n        data.push({\n            name: typeItem.name,\n            value: [\n                index,\n                baseTime,\n                baseTime += duration,\n                duration\n            ],\n            itemStyle: {\n                normal: {\n                    color: typeItem.color\n                }\n            }\n        });\n        baseTime += Math.round(Math.random() * 2000);\n    }\n});\n\nfunction renderItem(params, api) {\n    var categoryIndex = api.value(0);\n    var start = api.coord([api.value(1), categoryIndex]);\n    var end = api.coord([api.value(2), categoryIndex]);\n    var height = api.size([0, 1])[1] * 0.6;\n\n    var rectShape = echarts.graphic.clipRectByRect({\n        x: start[0],\n        y: start[1] - height / 2,\n        width: end[0] - start[0],\n        height: height\n    }, {\n        x: params.coordSys.x,\n        y: params.coordSys.y,\n        width: params.coordSys.width,\n        height: params.coordSys.height\n    });\n\n    return rectShape && {\n        type: 'rect',\n        shape: rectShape,\n        style: api.style()\n    };\n}\n\n\noption = {\n    tooltip: {\n        formatter: function (params) {\n            return params.marker + params.name + ': ' + params.value[3] + ' ms';\n        }\n    },\n    title: {\n        text: 'Profile',\n        left: 'center'\n    },\n    dataZoom: [{\n        start:2,\n        minValueSpan:10000,\n        \n        type: 'slider',\n        filterMode: 'weakFilter',\n        showDataShadow: false,\n        top: 400,\n        height: 10,\n        borderColor: 'transparent',\n        backgroundColor: '#e2e2e2',\n        handleIcon: 'M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n        handleSize: 20,\n        handleStyle: {\n            shadowBlur: 6,\n            shadowOffsetX: 1,\n            shadowOffsetY: 2,\n            shadowColor: '#aaa'\n        },\n        labelFormatter: ''\n    }, {\n        type: 'inside',\n        filterMode: 'weakFilter'\n    }],\n    grid: {\n        height:300\n    },\n    xAxis: {\n        type : 'value',\n        min: startTime,\n        minInterval:1,\n        scale: {min:100},\n        axisLabel: {\n            formatter: function (val) {\n                return Math.max(0, val - startTime) + ' ms';\n            }\n        }\n    },\n    yAxis: {\n        data: categories\n    },\n    geo:{\n        scaleLimit:{\n            \n        }\n    }\n    ,\n    series: [{\n        type: 'custom',\n        \n        renderItem: renderItem,\n        itemStyle: {\n            normal: {\n                opacity: 0.8\n            }\n        },\n        encode: {\n            x: [1, 2],\n            y: 0\n        },\n        data: data\n    }]\n};"}