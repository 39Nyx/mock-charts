{"code":"option = {\n    xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n    },\n    yAxis: {\n        type: 'value'\n    },\n    series: [{\n        data: [820, 932, 901, 934, 1290, 1330, 1320],\n        type: 'line'\n    }]\n};\n\n// 方法一：使用ResizeObserver\n// 文档地址：https://developer.mozilla.org/zh-CN/docs/Web/API/ResizeObserver\n// 关注：https://www.pmlab.top\n// 元素改变时会执行\nconst resizeObserver = new ResizeObserver(eles => {\n  \tfor (let ele of eles) {\n  \t\t// 根据当前dom获取图表实例，并且实例进行resize\n  \t\techarts.getInstanceByDom(ele.target).resize();\n  \t}\n});\n// 添加观察，实际应用时一个页面上有多个图表，所以一般会绑定在class上\nresizeObserver.observe(document.querySelector('#chart-panel'));\n\n// 取消观察\n// resizeObserver.unobserve();\n\n//-----------------------------------------------------\n\n// 方法二：使用扩展js库\n// 需引入js：https://cdn.bootcss.com/jquery-resize/1.1/jquery.ba-resize.min.js\n// 该方式就像普通思路一样监听div\n// $.getScript('https://cdn.bootcss.com/jquery-resize/1.1/jquery.ba-resize.min.js', function(){\n//\t  $('.right-panel').each(function(em,dm){\n//\t  $('#chart-panel').each(function(em,dm){\n//\t \t $(dm).resize(function(){\n//\t\t\t echarts.getInstanceByDom(dm).resize();\n//\t\t });\n//\t  });\n//});\n\n// 模拟div尺寸变化\nsetInterval(function(){\n\t$('#chart-panel').css({\n\t\twidth: parseInt(Math.random()*(1000-500)+500)+'px',\n\t\theight: parseInt(Math.random()*(600-500)+500)+'px'\n\t})\n},3000);"}