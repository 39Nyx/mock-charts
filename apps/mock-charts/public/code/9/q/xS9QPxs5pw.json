{"code":"var name = '通风量';\nvar data = {\n    xAxis: [\"#1 水泵室\", \"#2 水泵室\", \"#3 水泵室\", \"#4 水泵室\", \"#5 水泵室\", \"#6 水泵室\"],\n    yAxis: [15, 13, 23, 9, 19, 6]\n}\n\noption = {\n    backgroundColor:'#000',\n    tooltip: {\n        trigger: \"axis\",\n        textStyle: {\n            fontSize: 50\n        }\n    },\n    legend: {\n        data: [name],\n        textStyle: {\n            fontSize: 40,\n            color: '#fff'\n        }\n    },\n    grid: {\n        left: '12%',\n        bottom: '15%',\n        right: '15%'\n    },\n    xAxis: {\n        data: data.xAxis,\n        axisTick: {\n            show: false\n        },\n        axisLine: {\n            lineStyle: {\n                color: 'rgb(2,185,208)'\n            }\n        },\n        axisLabel: {\n            textStyle: {\n                color: '#ecf6f5',\n                fontSize: 28,\n            },\n            margin: 20,\n            interval: 0,\n            formatter: function(value) {\n                var ret = \"\"; //拼接加\\n返回的类目项  \n                var maxLength = 3; //每项显示文字个数  \n                var valLength = value.length; //X轴类目项的文字个数  \n                var rowN = Math.ceil(valLength / maxLength); //类目项需要换行的行数  \n                if (rowN > 1) //如果类目项的文字大于5,  \n                {\n                    for (var i = 0; i < rowN; i++) {\n                        var temp = \"\"; //每次截取的字符串  \n                        var start = i * maxLength; //开始截取的位置  \n                        var end = start + maxLength; //结束截取的位置  \n                        //这里也可以加一个是否是最后一行的判断，但是不加也没有影响，那就不加吧  \n                        temp = value.substring(start, end) + \"\\n\";\n                        ret += temp; //凭借最终的字符串  \n                    }\n                    return ret;\n                } else {\n                    return value;\n                }\n            }\n        }\n    },\n    yAxis: {\n        type: \"value\",\n        name: '    m³/min',\n        nameTextStyle: {\n            fontSize: 30,\n            padding: 20\n        },\n        axisLine: {\n            lineStyle: {\n                color: 'rgb(2,185,208)'\n            }\n        },\n        axisLabel: {\n            textStyle: {\n                color: '#ecf6f5',\n                fontSize: 40,\n            },\n            margin: 20\n        }\n    },\n    series: [{\n        name: [name],\n        type: \"bar\",\n        data: data.yAxis,\n        barWidth: 25,\n        \"markLine\": {\n            \"data\": [{\n                type: 'average',\n                \"lineStyle\": {\n                    \"color\": \"red\",\n                    \"width\": 1.7,\n                    height: 20\n                },\n                \"label\": {\n                    normal: {\n                        show: true,\n                        position: \"end\",\n                        formatter: '上限',\n                        textStyle: {\n                            fontSize: 40\n                        }\n                    },\n                },\n                \"name\": \"min\",\n                \"yAxis\": 17\n            }, {\n                type: 'average',\n                \"lineStyle\": {\n                    \"color\": \"#31e4b6\",\n                    \"width\": 1.7\n                },\n                \"label\": {\n                    normal: {\n                        show: true,\n                        position: \"end\",\n                        formatter: '下限',\n                        textStyle: {\n                            fontSize: 40\n                        }\n                    },\n                },\n                \"name\": \"下限\",\n                \"yAxis\": 2\n            }],\n        },\n        itemStyle: {\n            normal: {\n                barBorderRadius: 10,\n                label: {\n                    show: false,\n                    position: 'right',\n                    textStyle: {\n                        fontSize: 40,\n                        color: 'rgba(123,198 ,255)'\n                    }\n                },\n                color: function(param) {\n                    if (param.value >  17) {\n                        return new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                                offset: 0,\n                                color: \"rgba(223, 82, 72,1)\"\n                            },\n                            {\n                                offset: 1,\n                                color: \"rgba(223, 82, 72,0)\"\n                            }\n                        ]);\n                    } else {\n                        return new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                                offset: 0,\n                                color: 'rgba(121, 195, 252,1)'\n                            }, {\n                                offset: 0.4,\n                                color: 'rgba(121, 195, 252,0.5)'\n                            },\n                            {\n                                offset: 1,\n                                color: 'rgba(121, 195, 252,0.1)'\n                            }\n                        ])\n                    }\n                },\n            }\n        },\n    }, ],\n    // color: [\"rgb(30, 144, 255)\"]\n};"}