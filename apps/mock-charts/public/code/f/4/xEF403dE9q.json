{"code":"const grayBar = [100, 100]\r\nconst colors = ['#1fc779', '#30a3f3'];\r\noption = {\r\n    grid: {\r\n        left: '-50px', // 距离dom间距\r\n        right: '31px',\r\n        top: '7%',\r\n        bottom: '1%',\r\n        containLabel: true,\r\n    },\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n            // type: 'shadow'\r\n        },\r\n        padding: 10\r\n    },\r\n    yAxis: [{\r\n        type: \"value\",\r\n        axisPointer: {\r\n            type: \"shadow\"\r\n        },\r\n        // 横坐标 分割线等取消显示\r\n        axisTick: {\r\n            show: false\r\n        },\r\n        axisLine: {\r\n            show: false\r\n        },\r\n        splitLine: {\r\n            show: false\r\n        },\r\n        axisLabel: {\r\n            show: false,\r\n\r\n        }\r\n    }],\r\n    xAxis: [{\r\n            show: false,\r\n            type: \"category\",\r\n            inverse: true,\r\n            axisLabel: {\r\n                verticalAlign: \"bottom\",\r\n                align: \"left\",\r\n                padding: [0, 10, 20, 10],\r\n                textStyle: {\r\n                    fontSize: 14,\r\n                    color: \"white\",\r\n                    fontFamily: \"Source Han Sans CN\"\r\n                }\r\n            },\r\n            // 纵坐标数据\r\n            data: [\"外地扩张\", \"本地扩张\"],\r\n\r\n            yAxisIndex: 0,\r\n            // 横坐标 分割线等取消显示\r\n            axisTick: {\r\n                show: false\r\n            },\r\n            axisLine: {\r\n                show: false\r\n            }\r\n        },\r\n\r\n        {\r\n            show: false,\r\n            type: \"category\",\r\n            inverse: true,\r\n            axisLine: {\r\n                show: false\r\n            },\r\n            axisTick: {\r\n                show: false\r\n            },\r\n            axisLabel: {\r\n                show: true,\r\n                inside: false,\r\n                verticalAlign: \"bottom\",\r\n                // 位置 上右下左\r\n                padding: [0, 0, -20, 20],\r\n                lineHeight: \"40\",\r\n                textStyle: {\r\n                    fontSize: 16,\r\n                    color: \"white\",\r\n                    fontFamily: \"SourceHanSansCN-Regular\"\r\n                }\r\n            },\r\n            // 统计的总量 用纵坐标模拟\r\n            data: [61, 12],\r\n\r\n        },\r\n\r\n    ],\r\n    series: [{\r\n            // 实值\r\n            name: '实值',\r\n            show: true,\r\n            type: 'pictorialBar',\r\n            symbol: 'rect',\r\n            symbolSize: [192, 6], //图形元素的尺寸\r\n            symbolMargin: 2,\r\n            symbolRepeat: 'repeat',\r\n            barWidth: 192, // 统计条宽度\r\n            itemStyle: {\r\n                normal: {\r\n                    color: function(params) {\r\n                        return colors[params.dataIndex];\r\n                        // 取每条数据的 index 对应 colors 中的 index 返回这个颜色\r\n                    }\r\n                },\r\n            },\r\n            z: 3,\r\n            data: [61, 12],\r\n            // data:[\r\n            //     {value:61,symbol:\"path://M0 0h2160.527473v180.043956H0z\"},\r\n            //     {value:12,symbol:\"path://M0 0h2160.527473v180.043956H0z\"},\r\n            //     ],\r\n            animationDelay: (dataIndex, params) => { //每个图形动画持续时间\r\n                return params.index * 20;\r\n            },\r\n            animationEasing: 'quinticOut' //动画效果\r\n\r\n\r\n        },\r\n\r\n        {\r\n            // 全\r\n            name: '总值',\r\n            show: true,\r\n            type: 'pictorialBar',\r\n            symbol: 'rect',\r\n            symbolSize: [192, 6], //图形元素的尺寸\r\n            symbolMargin: 2,\r\n            symbolRepeat: 'repeat',\r\n            barGap: '-100%', //设置刘昂个柱子重叠\r\n            barWidth: 192, //统计条宽度\r\n            itemStyle: {\r\n                normal: {\r\n                    color: '#2B3567',\r\n                },\r\n            },\r\n            z: 1,\r\n            data: grayBar,\r\n            animationDelay: (dataIndex, params) => { //每个图形动画持续时间\r\n                return params.index * 20;\r\n            },\r\n            animationEasing: 'quinticOut' //动画效果\r\n\r\n        },\r\n\r\n\r\n    ]\r\n};"}