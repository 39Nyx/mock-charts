{"code":"/*\n * 1. 点击高亮周边节点\n * 2. 点击空白取消高亮节点\n * 3. 可拖拽\n */\nvar uploadedDataURL = \"/asset/get/s/data-1547519076593-iDKvm1_Je.json\";\nmyChart.showLoading();\n// dat.gui\napp.configParameters = {\n    pie1Process: {\n        min: 0,\n        max: 100\n    },\n    pie2Process: {\n        min: 0,\n        max: 100\n    },\n    pie3Process: {\n        min: 0,\n        max: 100\n    },\n};\napp.config = {\n    message: 'dat.gui',\n    pie1Process: 25,\n    pie2Process: 50,\n    pie3Process: 75\n};\n\n$.getJSON(uploadedDataURL, function (graph) {\n    myChart.hideLoading();\n\n    var categories = [];\n    for (var i = 0; i < 9; i++) {\n        categories[i] = {\n            name: '类目' + i\n        };\n    }\n    graph.nodes.forEach(function (node) {\n        node.itemStyle = null;\n        node.value = node.symbolSize;\n        node.symbolSize /= 1.5;\n        node.symbolSize = 10;\n        node.label = {\n            normal: {\n                show: node.symbolSize > 30\n            }\n        };\n        \n        // node.x = node.y = null;\n        // 增强节点拖拽\n        node.draggable = true;\n        // 固定 position\n        node.fixed = true;\n        node.category = node.attributes.modularity_class;\n    });\n    option = {\n        title: {\n            text: 'Les Miserables',\n            subtext: 'Default layout',\n            top: 'bottom',\n            left: 'right'\n        },\n        tooltip: {},\n        legend: [{\n            // selectedMode: 'single',\n            data: categories.map(function (a) {\n                return a.name;\n            })\n        }],\n        animationDuration: 1500,\n        animationEasingUpdate: 'quinticInOut',\n        series : [\n            {\n                name: 'Les Miserables',\n                type: 'graph',\n                layout: 'force',\n                force: {\n                    repulsion: 100\n                },\n                data: graph.nodes,\n                links: graph.links,\n                categories: categories,\n                roam: true,\n                // 禁止 hover 高亮周边节点\n                focusNodeAdjacency: false,\n                itemStyle: {\n                    normal: {\n                        borderColor: '#fff',\n                        borderWidth: 1,\n                        shadowBlur: 10,\n                        shadowColor: 'rgba(0, 0, 0, 0.3)'\n                    }\n                },\n                label: {\n                    position: 'right',\n                    formatter: '{b}'\n                },\n                lineStyle: {\n                    color: 'source',\n                    curveness: 0.3\n                },\n                emphasis: {\n                    lineStyle: {\n                        width: 10\n                    }\n                }\n            }\n        ]\n    };\n\n    myChart.setOption(option);\n    \n    // 拖动固定位置\n    myChart.on('mouseup', (param) => {\n        \n        // 仅处理 Node 节点\n        if (param.dataType === 'node') {\n\n            graph.nodes[param.dataIndex] = param.data;\n            myChart.setOption({\n                series: [{\n                    name: 'Les Miserables',\n                    data: graph.nodes\n                }]\n            });        \n        }\n    });\n    \n    \n    let  focusNodeAdjacency;\n    \n    let clearFocusNodeAdjacency = () => {\n        if (focusNodeAdjacency) {\n            myChart.dispatchAction({\n                type: 'unfocusNodeAdjacency',\n                dataIndex: focusNodeAdjacency\n            });\n            focusNodeAdjacency = null;\n        }\n    }\n    myChart.on('click', params => {\n        clearFocusNodeAdjacency();\n        if (params.dataType === 'node') {\n            focusNodeAdjacency = params.dataIndex;\n            myChart.dispatchAction({\n                type: 'focusNodeAdjacency',\n                dataIndex: params.dataIndex\n            })\n        }\n    })\n    \n    myChart.getZr().on('click', event => {\n      if(!event.target){\n          clearFocusNodeAdjacency();\n      }\n    });\n});"}