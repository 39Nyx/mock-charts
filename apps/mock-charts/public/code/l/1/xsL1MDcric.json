{"code":"const className = ['导入期', '成长期', '成熟期', '衰退期'].reverse();\nconst cycleName = ['宽带类', '家庭终端', '手机终端', '套餐合约', '权益', '新业务'];\nconst data1 = [\n [150, 100, 170, 200],\n [50, 160, 90, 200],\n [90, 100, 110, 100],\n [130, 60, 170, 200],\n [70, 260, 170, 200],\n [120, 260, 170, 50],\n];\nconst colorList = ['#5179ff', '#18c2bc', '#33b4ff', '#fda124', '#ff4b55', '#68d568'];\nconst colorList2 = ['#7d9bff', '#4cd1c3', '#56d1ff', '#ffd55e', '#ff9ca2', '#abe7ab'];\nconst defaultData = [1000, 1000, 1000, 1000, 1000, 1000];\nconst sumList = [];\nclassName.forEach((item, index) => {\n let sum = 0;\n data1.forEach((value) => {\n  sum += value[index];\n });\n sumList.push(sum);\n});\nconst series = [];\ncycleName.forEach((item, index) => {\n series.push({\n  name: item,\n  type: 'bar',\n  stack: '总量',\n  zlevel: 1,\n  itemStyle: {\n   normal: {\n    barBorderRadius: 10,\n    color: (params) => {\n     const i = JSON.parse(JSON.stringify(index));\n     // return colorList[i]\n     return new echarts.graphic.LinearGradient(\n      0,\n      0,\n      1,\n      0,\n      [\n       { offset: 0, color: colorList[i] },\n       { offset: 1, color: colorList2[i] },\n      ],\n      false\n     );\n    },\n   },\n  },\n  barWidth: 10,\n  data: data1[index],\n });\n});\nseries.push({\n name: '背景',\n type: 'bar',\n barWidth: 10,\n barGap: '-100%',\n data: defaultData,\n itemStyle: {\n  normal: {\n   color: '#e9efff',\n   barBorderRadius: 0,\n  },\n },\n axisLabel: {\n  show: true,\n },\n});\noption = {\n color: colorList,\n backgroundColor: '#fff',\n legend: {\n  show: true,\n  icon: 'circle',\n  itemHeight: 12,\n  itemWidth: 12,\n  textStyle: {\n   fontSize: 12,\n   color: '#999999',\n  },\n  top: 10,\n  itemGap: 10, // 垂直间距\n  y: 'top', // 延Y轴居中\n  data: cycleName,\n },\n grid: {\n  left: '5%',\n  right: '5%',\n  bottom: '5%',\n  top: '10%',\n  containLabel: true,\n },\n tooltip: {\n  trigger: 'axis',\n  axisPointer: {\n   type: 'none',\n  },\n  formatter: function (params) {\n   params.pop();\n   let str =\n    '<div style=\"text-align: left;color:#8994a5;\">' +\n    params[0].name +\n    '</div><div style=\"text-align: left;line-height: 25px;\">';\n   params.forEach((item, index) => {\n    str += item.marker + item.seriesName + ':' + item.value + '<br/>';\n   });\n   str += '</div>';\n   return str;\n  },\n },\n\n xAxis: {\n  show: true,\n  type: 'value',\n  max: 1000,\n  splitLine: {\n   show: true,\n   lineStyle: {\n    type: 'dashed',\n   },\n  },\n },\n yAxis: [\n  {\n   type: 'category',\n   inverse: true,\n   axisLabel: {\n    show: true,\n    textStyle: {\n     color: '#4e5663',\n    },\n   },\n   splitLine: {\n    show: false,\n   },\n   axisTick: {\n    show: false,\n   },\n   axisLine: {\n    show: false,\n   },\n   data: className,\n  },\n  {\n   triggerEvent: true,\n   show: true,\n   inverse: true,\n   data: sumList,\n   axisLine: {\n    show: false,\n   },\n   splitLine: {\n    show: false,\n   },\n   axisTick: {\n    show: false,\n   },\n   axisLabel: {\n    interval: 0,\n    color: ['#fff'],\n    align: 'left',\n    verticalAlign: 'center',\n    fontSize: 14,\n    formatter: function (value, index) {\n     return value;\n    },\n   },\n  },\n ],\n series: series,\n};\n"}