{"code":"const colorList = ['#0E66FF', '#23CA93', '#FFAE0D', '#F07300', '#DD2728', '#7A8AFF']\nconst labelList = ['公明街道', '凤凰街道', '光明街道', '玉塘街道', '新湖街道', '马田街道']\n\nconst title = '企业总数'\n\noption = {\n    title: {\n        // text: '企业总数',\n        text: title,\n        textStyle: {\n            fontSize: 16,\n            color: '#909399',\n            align: 'center'\n        },\n        // subtext: 205,\n        subtext: '0',\n        subtextStyle: {\n            fontWeight: 'bold',\n            fontSize: 24,\n            color: '#303133'\n        },\n        x: 'center',\n        y: 'center',\n        // y: '45%',\n        textVerticalAlign: 'middle'\n    },\n    tooltip: {\n        show: true\n    },\n    legend: {\n        data: labelList,\n        bottom: 0,\n        right: -24,\n        width: 320,\n        icon: 'circle',\n        itemGap: 12, // 图例之间的间隔\n        textStyle: {\n            padding: [0, 24, 0, 0]\n        }\n    },\n    series: [{\n        name: '',\n        type: 'pie',\n        center: ['50%', '45%'],\n        radius: ['35%', '50%'],\n        // avoidLabelOverlap: false,\n        // hoverAnimation: false,\n        // hoverAnimation: true,\n        startAngle: 235,\n        color: colorList,\n        // minAngle: 1, // 设置每块扇形的最小占比\n\n        label: {\n            fontSize: 14,\n            color: '#303133',\n            formatter: function(p) {\n                return p.name + ' ' + p.percent + '%\\n\\n'\n            },\n            padding: [10, -100] //文字和图的边距\n        },\n        labelLine: {\n            length2: 100,\n            length: 30,\n            lineStyle: {\n                color: '#d7d8db'\n            }\n        },\n        data: []\n    }]\n}\n\n\n\n// 请求数据之后的\n\n\n\n\n\nsetDataValue([0, 0, 0, 0, 0, 0])\n\n// 模拟请求\n\nsetTimeout(function() {\n    let dataValue = [1, 22, 34, 9, 23, 4]\n    setDataValue(dataValue)\n\n    setTimeout(function() {\n        let dataValue = [23, 23, 56, 7, 5, 56]\n        setDataValue(dataValue)\n\n    }, 2000);\n}, 1000);\n\n// 设置数据\nfunction setDataValue(dataValue) {\n    const arr = []\n    let total = 0\n\n    labelList.forEach((label, index) => {\n        let value = +dataValue[index] || 0\n        total += value\n        arr.push({\n            value,\n            name: label\n        })\n    })\n\n    option.series[0].data = arr\n    option.title.subtext = total + ''\n\n    myChart.setOption(option);\n}"}