{"code":"\nvar yearCount = 5;\nvar categoryCount = 12;\n\nvar xAxisData = [];\nvar customData = [];\nvar legendData = [];\nvar dataList = [];\n\nlegendData.push('港口通过能力');\nvar encodeY = [];\nfor (var i = 0; i < yearCount; i++) {\n    legendData.push((2010 + i) + '');\n    dataList.push([]);\n    encodeY.push(1 + i);\n}\n\nfor (var i = 0; i < categoryCount; i++) {\n    var val = Math.random() * 1000;\n    xAxisData.push('category' + i);\n    var customVal = [i];\n    customData.push(customVal);\n\n    var data = dataList[0];\n    for (var j = 0; j < dataList.length; j++) {\n        var value = j === 0\n            ? echarts.number.round(val, 2)\n            : echarts.number.round(Math.max(0, dataList[j - 1][i] + (Math.random() - 0.5) * 200), 2);\n        dataList[j].push(value);\n        customVal.push(value);\n    }\n}\n\nfunction renderItem(params, api) {\n    var xValue = api.value(0);\n    var currentSeriesIndices = api.currentSeriesIndices();\n    var barLayout = api.barLayout({\n        barGap: '30%', barCategoryGap: '20%', count: currentSeriesIndices.length - 1\n    });\n\n    var points = [];\n    for (var i = 0; i < currentSeriesIndices.length; i++) {\n        var seriesIndex = currentSeriesIndices[i];\n        if (seriesIndex !== params.seriesIndex) {\n            var point = api.coord([xValue, api.value(seriesIndex)]);\n            point[0] += barLayout[i - 1].offsetCenter;\n            point[1] -= 20;\n            points.push(point);\n        }\n    }\n    var style = api.style({\n        stroke: api.visual('color'),\n        fill: null\n    });\n\n    return {\n        type: 'polyline',\n        shape: {\n            points: points\n        },\n        style: style\n    };\n}\n\noption = {\n    tooltip: {\n        trigger: 'axis'\n    },\n    legend: {\n        data: legendData\n    },\n    dataZoom: [{\n        type: 'slider',\n        start: 50,\n        end: 70\n    }, {\n        type: 'inside',\n        start: 50,\n        end: 70\n    }],\n    xAxis: {\n        data: xAxisData\n    },\n    yAxis: {},\n    series: [{\n        type: 'custom',\n        name: 'trend',\n        renderItem: renderItem,\n        itemStyle: {\n            normal: {\n                borderWidth: 2\n            }\n        },\n        encode: {\n            x: 0,\n            y: encodeY\n        },\n        data: customData,\n        z: 100\n    }].concat(echarts.util.map(dataList, function (data, index) {\n        return {\n            type: 'bar',\n            animation: false,\n            name: legendData[index + 1],\n            itemStyle: {\n                normal: {\n                    opacity: 0.5\n                }\n            },\n            data: data\n        };\n    }))\n};"}