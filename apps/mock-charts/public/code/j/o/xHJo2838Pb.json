{"code":"var uploadedDataURL = \"/asset/get/s/data-1495595908173-rk2KsOfWb.json\";\n\n$.getJSON(uploadedDataURL, function(linedata) {\n\n    var rdataArr = [];\n    var rlinks = [];\n    var dataentryf = {\n        name: '测试',\n        symbolSize: 100,\n        draggable: true,\n        category: '测试'\n    }\n    rdataArr.push(dataentryf);\n    for (var i = 0; i < 3000; i++) {\n        var dataentry = {\n            name: '测试' + i,\n            draggable: true,\n            category: '测试',\n            symbolSize: 20,\n        }\n        rdataArr.push(dataentry);\n        var datalink = {\n            source: \"测试\",\n            target: '测试' + i,\n        }\n        rlinks.push(datalink);\n    }\n\n\n    option = {\n\n        series: [{\n            name: '微博',\n            type: 'graphGL',\n            layout: 'force',\n            data: rdataArr,\n            edges: rlinks,\n            categories: [{\n                itemStyle: {\n                    normal: {\n                        color: 'black'\n                    }\n                }\n            }],\n            focusNodeAdjacency: true,\n            roam: true,\n            label: {\n                normal: {\n                    position: 'right',\n                    formatter: '{b}'\n                }\n            },\n\n            forceAtlas2: {\n                steps: 10, //布局速度\n                jitterTolerence: 1000,\n                stopThreshold: 100, //停止布局的阈值，当布局的全局速度因子小于这个阈值时停止布局。设为 0 则永远不停止\n                repulsionByDegree: true, //是否根据节点边的数量来计算节点的斥力因子\n                gravity: 0.05, //节点受到的向心力。这个力会让节点像中心靠拢\n                //gravityCenter:[0.1,10],//向心力中心的位置。默认去初始位置的中间点\n                edgeWeight: [0.3, 4], //边的权重分布\n                edgeWeightInfluence: 2, //边权重的影响因子。值越大，则边权重对于引力的影响也越大\n                nodeWeight: [0.5, 4],\n                scaling: 1, //布局的缩放因子，值越大则节点间的斥力越大\n                preventOverlap: false, //是否开启防止节点重叠。\n            }\n        }]\n    };\n    myChart.setOption(option)\n})"}