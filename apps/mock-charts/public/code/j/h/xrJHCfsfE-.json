{"code":"mapboxgl.accessToken = mapboxglToken;\n\nvar ENCODE_SCALE = 1e6;\nfunction decodeLine(line) {\n\n    var result = [];\n    var prevX = line[0];\n    var prevY = line[1];\n\n    for (var i = 0; i < line[2].length; i += 2) {\n        var x = line[2].charCodeAt(i) - 64;\n        var y = line[2].charCodeAt(i + 1) - 64;\n        // ZigZag decoding\n        x = (x >> 1) ^ (-(x & 1));\n        y = (y >> 1) ^ (-(y & 1));\n        // Delta deocding\n        x += prevX;\n        y += prevY;\n\n        prevX = x;\n        prevY = y;\n        // Dequantize\n        result.push([x / ENCODE_SCALE, y / ENCODE_SCALE, 10]);\n    }\n\n    return result;\n}\n\nvar geoJSON = {\n    features: []\n};\nvar regions = [];\nvar readShp = new Promise(function (resolve, reject) {\n    shapefile.open('/asset/get/s/data-1498751177695-rkzAeiGEb.shp', '/asset/get/s/data-1498751184605-rJYAxjMVW.dbf')\n        .then(source => source.read()\n            .then(function append(result) {\n                if (result.done) {\n                    resolve();\n                    return;\n                }\n                var feature = result.value;\n                feature.properties.name = geoJSON.features.length + '';\n                regions.push({\n                    name: geoJSON.features.length + '',\n                    value: 1,\n                    height: feature.properties.SHAPE_leng * 10000\n                })\n                geoJSON.features.push(feature);\n                return source.read().then(append);\n            })\n        );\n});\n\nmyChart.showLoading();\n\nPromise.all([$.getJSON('/asset/get/s/data-1498751206824-HkkgZsfEW.json'), readShp])\n    .then(function ([data, lastFeature]) {\n\n        var lines = data.map(function (track) {\n            return {\n                coords: decodeLine(track)\n            };\n        });\n\n        myChart.hideLoading();\n\n        echarts.registerMap('buildings', geoJSON);\n\n        myChart.setOption({\n            mapbox: {\n                center: [18.424552361777955, -33.92188144682616],\n                zoom: 14,\n                pitch: 50,\n                bearing: -10,\n                altitudeScale: 2,\n                style: 'mapbox://styles/mapbox/dark-v9',\n                postEffect: {\n                    enable: true,\n                    screenSpaceAmbientOcclusion: {\n                        enable: true,\n                        intensity: 1.2,\n                        radius: 6,\n                        quality: 'high'\n                    },\n                    screenSpaceReflection: {\n                        enable: true\n                    }\n                },\n                light: {\n                    main: {\n                        intensity: 1,\n                        shadow: true,\n                        shadowQuality: 'high'\n                    },\n                    ambient: {\n                        intensity: 0.\n                    },\n                    ambientCubemap: {\n                        texture: '/asset/get/s/data-1491838644249-ry33I7YTe.hdr',\n                        exposure: 1,\n                        diffuseIntensity: 0.5,\n                        specularIntensity: 2\n                    }\n                }\n            },\n            series: [{\n                type: 'lines3D',\n\n                coordinateSystem: 'mapbox',\n\n                effect: {\n                    show: true,\n                    constantSpeed: 5,\n                    trailWidth: 2,\n                    trailLength: 0.8,\n                    trailOpacity: 1,\n                    spotIntensity: 10\n                },\n\n                blendMode: 'lighter',\n\n                polyline: true,\n\n                lineStyle: {\n                    width: 0.1,\n                    color: 'rgb(200, 40, 0)',\n                    opacity: 0.\n                },\n\n                data: {\n                    count: function () {\n                        return lines.length;\n                    },\n                    getItem: function (idx) {\n                        return lines[idx]\n                    }\n                }\n            }, {\n                type: 'map3D',\n                map: 'buildings',\n\n                coordinateSystem: 'mapbox',\n                shading: 'realistic',\n                silent: true,\n\n                instancing: true,\n\n                data: regions,\n\n                realisticMaterial: {\n                    metalness: 1,\n                    roughness: 0.2,\n                }\n            }]\n        });\n    });\n    \nwindow.addEventListener('keydown', function () {\n    myChart.dispatchAction({\n        type: 'lines3DToggleEffect',\n        seriesIndex: 0\n    });\n});"}