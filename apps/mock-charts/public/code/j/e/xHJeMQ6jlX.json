{"code":"var xdata=[];\nvar ydata=[];\n\nfor(var i=0;i<1024/2;i++){\n    xdata.push(i);\n    ydata.push(0);\n}\n\n\n\n\noption = {\n    animation:false,\n    xAxis: {\n        type: 'category',\n        data: xdata,\n        show:false\n    },\n    yAxis: {\n        type: 'value',\n        show:false\n    },\n    series: [{\n        data:ydata,\n        type: 'bar',\n         itemStyle: {\n                normal: {\n                    barBorderRadius: [30, 30, 0, 0],\n                    color: new echarts.graphic.LinearGradient(\n                        0, 0, 0, 1, [{\n                                offset: 0,\n                                color: '#00feff'\n                            },\n                            {\n                                offset: 0.5,\n                                color: '#027eff'\n                            },\n                            {\n                                offset: 1,\n                                color: '#0286ff'\n                            }\n                        ]\n                    )\n                }\n            },\n    }]\n};\n\n window.AudioContext =(window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.msAudioContext);\nlet audioContext=new window.AudioContext();\n\n\nvar oReq = new XMLHttpRequest();\noReq.open('GET', '/asset/get/s/data-1493350085456-S1p6LNlyZ.mp3', true);\noReq.responseType = 'arraybuffer';\n\nvar analyser;\noReq.onload = function(e) {\n    audioContext.decodeAudioData(oReq.response, function(buffer){\n            var audioBufferSouceNode = audioContext.createBufferSource();\n             audioBufferSouceNode.buffer = buffer;\n\n             analyser = audioContext.createAnalyser();\n             audioBufferSouceNode.connect(analyser);\n\n             analyser.connect(audioContext.destination);\n             audioBufferSouceNode.start(0);\n             animation();\n    });\n};\n\noReq.send();\n\nfunction animation(){\n        requestAnimationFrame(animation);\n        var array = new Uint8Array(analyser.frequencyBinCount);\n        analyser.getByteFrequencyData(array);\n        var data=[];\n        for(var i=0;i<array.length;i+=2){\n            data.push(array[i]);\n        }\n        // console.log(data)\n        option.series[0]={data:data,type:'bar'}\n        myChart.setOption(option);\n        //  console.log(array)\n}"}