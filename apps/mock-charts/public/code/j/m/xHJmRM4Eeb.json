{"code":"var symbolSize = 10;\nvar categoryData = [];\naddXData(10);\nvar data = [23, 55, 73, 23];\n\noption = {\n    title: [{\n        text: 'Generate Data'\n    }],\n    toolbox: {\n        itemSize: 30,\n        right: 30,\n        feature: {\n            magicType: {\n                type: ['line', 'bar']\n            },\n            myAddCategories: {\n                show: true,\n                title: 'Extend X Axis',\n                icon: 'path://M10,10 L30,10 M20,0 L20,20',\n                onclick: addX\n            },\n            myBack: {\n                show: true,\n                title: 'Back',\n                icon: 'path://M10,10 L15,0 L40,0 L40,20 L15,20 z M20,5 L33,15 M20,15 L33,5',\n                onclick: removeLast\n            }\n        }  \n    },\n    legend: {\n        data: ['Hover me see data ~'],\n        tooltip: {\n            show: true,\n            formatter: function () {\n                return JSON.stringify(data);\n            }\n        }\n    },\n    tooltip: {\n        enterable: true,\n        extraCssText: 'user-select:all;max-width:300px;white-space:normal;word-break:break-all;word-wrap:break-word;',\n        position: {\n            top: 30,\n            left: 'center'\n        }\n    },\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: 100,\n        containLabel: true\n    },\n    xAxis: {\n        boundaryGap: false,\n        data: categoryData\n    },\n    yAxis: {\n        min: 0,\n        max: 80,\n        type: 'value',\n        axisLine: {onZero: false},\n        axisPointer: {\n            show: true,\n            triggerTooltip: false,\n            lineStyle: {\n                type: 'dashed'\n            }\n        }\n    },\n    series: [\n        {\n            id: 'a',\n            name: 'Hover me see data ~',\n            type: 'line',\n            smooth: true,\n            symbolSize: symbolSize,\n            label: {\n                emphasis: {\n                    show: true\n                }\n            },\n            tooltip: {\n                show: false\n            },\n            data: data\n        }\n    ]\n};\n\nvar zr = myChart.getZr();\n\n\nzr.on('click', function (params) {\n    add([params.offsetX, params.offsetY]);\n});\n\nzr.on('mousemove', function (params) {\n    var pointInPixel = [params.offsetX, params.offsetY];\n    zr.setCursorStyle(myChart.containPixel('grid', pointInPixel) ? 'copy' : 'default');\n});\n\n\nfunction add(pointInPixel) {\n    var pointInGrid = myChart.convertFromPixel('grid', pointInPixel);\n\n    if (myChart.containPixel('grid', pointInPixel)) {\n        data.push(+pointInGrid[1].toFixed(2));\n        refresh();\n    }\n}\n\nfunction removeLast() {\n    if (data.length) {\n        data.pop();\n        refresh();\n    }\n}\n\nfunction addX() {\n    addXData(10);\n    refresh();\n}\n\nfunction addXData(count) {\n    for (var i = 0; i < count; i++) {\n        categoryData.push('x' + i);\n    }\n}\n\nfunction refresh() {\n    myChart.setOption({\n        xAxis: {\n            data: categoryData\n        },\n        series: [{\n            id: 'a',\n            data: data\n        }]\n    });\n}"}