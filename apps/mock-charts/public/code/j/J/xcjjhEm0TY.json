{"code":"option = {\n    series: [\n      {\n        name: 'Access From',\n        type: 'pie',\n        minAngle: 2,\n        radius: [70, 85],\n        data: [\n          {\n            value: 12000,\n            name: '导航套件',\n            // 设置扇形的颜色\n            itemStyle: {\n              color: '#24CEBF'\n            },\n            // 设置文字的颜色\n            label: {\n              color: '#24CEBF'\n            }\n          },\n          { value: 100, name: '', itemStyle: { color: 'rgba(0,0,0,0)' } },\n          {\n            value: 200,\n            name: '智能插秧机',\n            // 设置扇形的颜色\n            itemStyle: {\n              color: '#FFF'\n            },\n            // 设置文字的颜色\n            label: {\n              color: '#FFF'\n            }\n          },\n          { value: 100, name: '', itemStyle: { color: 'rgba(0,0,0,0)' } },\n          {\n            value: 1,\n            name: '智能收割机',\n            // 设置扇形的颜色\n            itemStyle: {\n              color: '#00BFFF'\n            },\n            // 设置文字的颜色\n            label: {\n              color: '#00BFFF'\n            }\n          },\n          { value: 100, name: '', itemStyle: { color: 'rgba(0,0,0,0)' } }\n        ],\n        labelLine: {\n          length: 10,\n          length2: 0,\n          maxSurfaceAngle: 80\n        },\n        label: {\n          alignTo: 'edge',\n          minMargin: 5,\n          edgeDistance: 100,\n          distanceToLabelLine: 10,\n          lineHeight: 20,\n          formatter: function (params) {\n            if (params.name) {\n              return `{a|${params.value}}` + (params.name === '疆驭导航套件' ? '{b|套}' : '{b|台}') + '\\n' + `{b|${params.name}}`\n            }\n          },\n          rich: {\n            a: {\n              fontSize: 24,\n              // color: params.color,\n              fontFamily: 'Bebas',\n              padding: [-30, 4, 10, 0]\n            },\n            b: {\n              fontSize: 14,\n              padding: [-30, 0, 10, 0],\n              color: '#FFFFFF'\n            }\n          }\n        },\n        labelLayout: function (params) {\n          const isLeft = params.labelRect.x < 400 / 2\n          const points = params.labelLinePoints\n          points[2][0] = isLeft ? params.labelRect.x : params.labelRect.x + params.labelRect.width\n          return {\n            labelLinePoints: points\n          }\n        }\n      }\n    ]\n};\n"}