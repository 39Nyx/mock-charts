{"code":"var itemStyleExample = {\r\n    normal: {\r\n        color: 'red',\r\n    },\r\n};\r\nvar rasterColorscale = {\r\n    stops: [\r\n        [0, 'red'],\r\n        [2, 'blue'],\r\n        [5, 'grey'],\r\n        [8, 'green'],\r\n        [10, 'pink']\r\n    ],\r\n};\r\n\r\nfunction getYMax() {\r\n    if (rasterColorscale.max) {\r\n        return rasterColorscale.max;\r\n    }\r\n    var length = rasterColorscale.stops.length;\r\n    var max = rasterColorscale.stops[length - 1][0];\r\n    // max += 1;\r\n    return max;\r\n}\r\n\r\nfunction getYMin() {\r\n    if (rasterColorscale.min) {\r\n        return rasterColorscale.min;\r\n    }\r\n    var min = rasterColorscale.stops[0][0];\r\n    return min;\r\n}\r\n\r\nfunction getFactor(value, max, min) {\r\n    return (value - min) / (max - min);\r\n}\r\n\r\nfunction getIntervalSery(prepos, pos, value, color) {\r\n    var max = getYMax();\r\n    var min = getYMin();\r\n    var name = prepos + \"~\" + pos;\r\n    var handleValue = getFactor(value, max, min);\r\n    var handlePos = getFactor(pos, max, min);\r\n    return {\r\n        type: 'bar',\r\n        name: name,\r\n        markLine: {\r\n            data: [{\r\n                yAxis: handlePos\r\n            }],\r\n        },\r\n        data: [handleValue],\r\n        stack: 'interval',\r\n        itemStyle: {\r\n            normal: {\r\n                color: color,\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\nfunction getExponentialSery(prepos, pos, value, color, preColor) {\r\n    var max = getYMax();\r\n    var min = getYMin();\r\n    var name = prepos + \"~\" + pos;\r\n    var handleValue = getFactor(value, max, min);\r\n    // const handlePos = getFactor(pos, max, min);\r\n    return {\r\n        type: 'bar',\r\n        name: name,\r\n        data: [handleValue],\r\n        stack: 'exponential',\r\n        itemStyle: {\r\n            normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                        offset: 1,\r\n                        color: preColor\r\n                    },\r\n                    {\r\n                        offset: 0,\r\n                        color: color\r\n                    },\r\n                ]),\r\n            },\r\n        },\r\n    };\r\n}\r\nvar series = rasterColorscale.stops.reduce(function(result, colorGroup, index) {\r\n    var pos = colorGroup[0],\r\n        color = colorGroup[1];\r\n    if (index === 0) {\r\n        // const prepos = getYMin();\r\n        var prepos = 0;\r\n        var value_1 = pos - prepos;\r\n        result.push(getIntervalSery(prepos, pos, value_1, color));\r\n        result.push(getExponentialSery(prepos, pos, value_1, color, color));\r\n        return result;\r\n    }\r\n    var _a = rasterColorscale.stops[index - 1],\r\n        prePos = _a[0],\r\n        preColor = _a[1];\r\n    var value = pos - prePos;\r\n    result.push(getIntervalSery(prePos, pos, value, preColor));\r\n    result.push(getExponentialSery(prePos, pos, value, color, preColor));\r\n    if (index === rasterColorscale.stops.length - 1) {\r\n        var max = getYMax();\r\n        if (max === pos) {\r\n            var value_2 = 1;\r\n            var addPos = max + value_2;\r\n            result.push(getIntervalSery(pos, addPos, value_2, color));\r\n            result.push(getExponentialSery(pos, addPos, value_2, color, color));\r\n        } else {\r\n            var value_3 = max - pos;\r\n            result.push(getIntervalSery(pos, max, value_3, color));\r\n            result.push(getExponentialSery(pos, max, value_3, color, color));\r\n        }\r\n    }\r\n    return result;\r\n}, []);\r\n\r\n\r\n\r\n\r\noption = {\r\n    title: {\r\n        text: 'raster-colorscale'\r\n    },\r\n    tooltip: {\r\n        trigger: 'item'\r\n    },\r\n    legend: {\r\n        // data: ['exponential', 'interval']\r\n    },\r\n    grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        // containLabel: true\r\n    },\r\n    // toolbox: {\r\n    //     feature: {\r\n    //         saveAsImage: {}\r\n    //     }\r\n    // },\r\n    xAxis: {\r\n        type: 'category',\r\n        data: ['raster-colorscale']\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        max: 1.1\r\n    },\r\n    series: series\r\n};"}