{"code":"app.title = '环形图';\n\noption = {\n    polar:{},\n    angleAxis: {\n        show: true,\n        max: 360,//定义极坐标最大角度为360，方便运算\n    },\n    radiusAxis: {\n        max: 100,//定义极坐标最大半径100，方便计算\n        show: true\n    },\n    //自定义绘制图形如果比较简单可以使用graphic，可实现series自定义图形相同的效果\n    graphic: [{\n        type: 'circle',\n        shape: {\n            cx: 200,\n            cy: 100,\n            r: 15,\n        },\n        style: {\n            fill: 'yellow'\n        }\n    }],\n    series: [{\n        type: 'custom',\n        coordinateSystem: 'polar',\n        renderItem (params, api) {\n            //api有一个coord方法，参数是一个数组[原始半径值,原始角度值]，将用户传入的数据值映射到坐标系上\n            //输出四个参数polar: [x, y, radius, angle]\n            //分别为：极坐标下x坐标值，极坐标下y坐标值，极坐标下半径值，极坐标下角度值\n            const posCircle = api.coord([30, 120])\n            //这样用户只要定义自己方便计算的角度和半径让api.coord方法计算对应极坐标下的值\n            const posSectorStartAngle = api.coord([60,api.value(0)])//api.value(0)即data的第一个值，以此类推...\n            const posSectorEndAngle = api.coord([60,api.value(1)])\n            return {\n                type: 'group',\n                children: [\n                    {\n                        type: 'sector',\n                          shape: {\n                            cx: params.coordSys.cx,//中心x坐标\n                            cy: params.coordSys.cy,//中心y坐标\n                            r0: 60,//内半径\n                            r: 90,//外半径\n                            startAngle: posSectorStartAngle[3],//起始角度弧度值\n                            endAngle: posSectorEndAngle[3]//终止角度弧度值\n                          },\n                          style: {\n                            fill: 'blue'//填充色\n                          }\n                    },\n                    {\n                       type: 'circle',\n                        shape: {\n                            cx: posCircle[0],\n                            cy: posCircle[1],\n                            r: 20,\n                        },\n                        style: {\n                            fill: 'red'\n                        } \n                    }\n                ]\n            }\n        },\n        data: [\n            [0,180]\n        ]\n    }]\n};"}