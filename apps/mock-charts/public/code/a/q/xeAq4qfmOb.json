{"code":"let fontcol=\"#00000087\" ;\r\nlet this_={};\r\nthis_.colmap = {\r\n    '飞行':'#00daff',\r\n    '定检':'#f9ff00',\r\n    '排故':'#ff6000',\r\n    '停飞':'#a3abad',\r\n}\r\nthis_.startTime=1620576000000;\r\nthis_.categories  = ['飞机A','飞机B'];\r\nthis_.dataE=[\r\n{\"name\":\"飞行\",\"value\":[0,1620576000000,1620601200000,'7小时']},//毫秒数要为数字类型\r\n{\"name\":\"排故\",\"value\":[0,1620619200000,1620630000000,'3小时']},\r\n{\"name\":\"飞行\",\"value\":[1,1620644400000,1620655200000,'3小时']},\r\n{\"name\":\"停飞\",\"value\":[1,1620655200000,1620658300000,'显示内容']} //1:表飞机B\r\n];\r\nfor (var i = 0; i < this_.dataE.length; i++){\r\n  this_.dataE[i].itemStyle={\"normal\":{\"color\":this_.colmap[this_.dataE[i].name]}};\r\n} \r\n\r\nlet renderItem=function (params, api) {\r\n    var categoryIndex = api.value(0);\r\n    var start = api.coord([api.value(1), categoryIndex]);\r\n    var end = api.coord([api.value(2), categoryIndex]);\r\n    var height = api.size([0, 1])[1] * 0.6;\r\n\r\n    var rectShape = echarts.graphic.clipRectByRect({\r\n        x: start[0],\r\n        y: start[1] - height / 2,\r\n        width: end[0] - start[0],\r\n        height: height\r\n    }, {\r\n        x: params.coordSys.x,\r\n        y: params.coordSys.y,\r\n        width: params.coordSys.width,\r\n        height: params.coordSys.height\r\n    });\r\n    return rectShape && {\r\n        type: 'rect',\r\n        transition: ['shape'],\r\n        shape: rectShape,\r\n        style: api.style()\r\n    };\r\n  }\r\nthis_.renderItem=renderItem;\r\noption = {\r\n      tooltip: {\r\n          formatter: function (params) {\r\n              //console.log(params);\r\n              if(params.value&&params.value.length>=4){\r\n                  return params.marker+this_.categories[params.value[0]]+':' + params.name + '-' + params.value[3] ;\r\n              }else{\r\n                  return \"\";\r\n              }\r\n          }\r\n      },\r\n      dataZoom: [{  \r\n          type: 'slider',\r\n          filterMode: 'weakFilter',\r\n          xAxisIndex: 0,\r\n          showDetail:false,\r\n          showDataShadow:false\t//值也可为\"-5px\",解决拖动条宽度问题\t\t\t\r\n        }\r\n      ],\r\n      grid: {\r\n        //containLabel: true\r\n      },\r\n      xAxis: {\r\n          min: this_.startTime,\r\n          type:'time',\r\n          scale: true,\r\n          axisLabel: {\r\n            formatter: function (val) {\r\n                  var da= new Date(Number(val));\r\n                  var s=(da.getMonth()+1)+\"-\"+da.getDate()+\" \"+da.getHours();\r\n                  return s;\r\n            }\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: fontcol\r\n            }\r\n          },\r\n          axisPointer:{\r\n              show:true,                  \r\n              label:{\r\n                  formatter:function(params){\r\n                    let a=parseInt(params.value);\r\n                    return new Date(a).toLocaleString();\r\n                  },\r\n                  color:'black',\r\n              },\r\n              \r\n          }\r\n      },\r\n      yAxis: {\r\n          data:  this_.categories,\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: fontcol\r\n            }\r\n          },\r\n      },\r\n      series: [{\r\n          type: 'custom',\r\n          renderItem: this_.renderItem,\r\n          itemStyle: {\r\n              opacity: 0.8\r\n          },\r\n          encode: {\r\n              x: [1, 2],\r\n              y: 0\r\n          },\r\n          data: this_.dataE\r\n      }]\r\n    }; "}