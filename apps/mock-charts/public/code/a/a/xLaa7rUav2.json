{"code":"var defaultData = ['6.69m', '8.9m'];\r\nvar v1 = Number(defaultData[0].split('m')[0]),\r\n\tv2 = Number(defaultData[1].split('m')[0]);\r\nvar fillData = []; //水波数据\r\nfillData.push(v1/10, v2/10, v1/15, v2/15); //console.log(this.fillData)\r\nvar color = ''; //[255, 198, 2], [247, 151, 0], [241, 92, 128], [63, 144, 255]\r\nconsole.log((v2-v1).toFixed(2), v2);\r\nif((v2-v1)<2 && (v2-v1)>1){\r\n\tcolor = '255, 198, 2';\r\n}else if((v2-v1)<=1 && (v2-v1)>0){\r\n\tcolor = '247, 151, 0';\r\n}else if(v2 <= v1){\r\n\tcolor = '241, 92, 128'; \r\n}else{\r\n\tcolor = '63, 144, 255';\r\n}\r\n\r\n//echarts\r\noption = {\r\n    backgroundColor:'transparent',//背景色\r\n    title:{\r\n        text:'水波球',\r\n        x:'left',\r\n        y:'top',\r\n        textStyle: {\r\n            fontSize: 14,\r\n            fontWeight:'bold',\r\n            color: 'rgb('+color+')' // 主标题文字颜色\r\n        }\r\n    },\r\n    xAxis:{\r\n        show: false, // 不显示\r\n    },\r\n    yAxis: {\r\n        show: false, // 不显示\r\n    },\r\n    grid:{\r\n         top: 0,\r\n         right: 0,\r\n         bottom: 0,\r\n         left: 0,\r\n    }, \r\n    series: [{\r\n        type: 'liquidFill',\r\n        radius: '100%',         // 半径大小\r\n        center: ['50%', '50%'], // 布局位置\r\n        waveAnimation: 10,      // 动画时长\r\n        amplitude: 20,          // 振幅\r\n        data: (function(data){\r\n            var arr=[];\r\n            data.forEach(function(items){\r\n                arr.push(items);   //value\r\n            });\r\n            return arr;\r\n        })(fillData), // 水球波纹值\r\n        backgroundStyle: {\r\n            color: '#0b2d46',\r\n        },\r\n        color: ['rgba('+color+', .1)', 'rgba('+color+', .2)', 'rgba('+color+', .3)', 'rgba('+color+', .4)'],\r\n        label: {\r\n            normal: {\r\n                color: '#fff',\r\n                textStyle: {\r\n                    fontSize: 18\r\n                },\r\n                formatter: (params)=>{ //console.log(params)\r\n                    let newValue = params.value*10;\r\n                    return newValue.toFixed(2)+'m'\r\n                }\r\n            }\r\n        },\r\n        outline: { // 轮廓设置\r\n            show: false,\r\n        },\r\n    },{\r\n        type: 'line', // 折线图\r\n        markLine: {\r\n            silent: true, // 不触发鼠标事件\r\n            symbol: 'diamond', // 标线两端样式\r\n            lineStyle:{ // 标线样式\r\n                type: 'dashed',\r\n                width: 1,\r\n                color: 'rgba('+color+', 1)',\r\n                opacity: 0.8\r\n            }, \r\n            precision: 2, //标线数值的精度，在显示平均值线的时候有用（即小数点后第几位）\r\n            label:{\r\n                show: true,\r\n                position: 'middle',\r\n                distance: -10,\r\n                color: 'rgba('+color+', 1)',\r\n                fontSize: 18,\r\n                formatter: function(params){ //console.log(params)\r\n                    var res = '警戒线 '+ (params.value*10).toFixed(2) + 'm';\r\n                    return res;\r\n                }\r\n            },\r\n            data: [{ // 标线数据\r\n                yAxis: fillData[1], // y 轴\r\n            }]\r\n        }\r\n\r\n    }]          \r\n};\r\n"}