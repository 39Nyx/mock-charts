{"code":"let data = [{\n        \"list\": [{\n                \"colorNum\": 0,\n                \"endTime\": '10',\n                \"name\": \"在线\",\n                \"quantity\": 10,\n                \"startTime\": '0',\n            },\n            {\n                \"colorNum\": 1,\n                \"endTime\": \"20\",\n                \"name\": \"离线\",\n                \"quantity\": 10,\n                \"startTime\": \"12\",\n            },\n            {\n                \"colorNum\": 2,\n                \"endTime\": \"30\",\n                \"name\": \"故障\",\n                \"quantity\": 10,\n                \"startTime\": \"25\",\n            },\n            {\n                \"colorNum\": 3,\n                \"endTime\": '55',\n                \"name\": \"繁忙\",\n                \"quantity\": 10,\n                \"startTime\": '50',\n            },\n\n        ],\n        \"plant\": \"\"\n    },\n    \n\n\n\n]\n// let start_ = \"0\",\n//     end_ = \"60\"; //自定义时间\nlet seriesData = [];\nlet yAxisData_plant = []; //工厂名\n\ndata.forEach((item, index) => {\n    yAxisData_plant.push(item.plant);\n    let bgColor;\n    item.list.forEach((listItem, listIndex) => {\n        switch (listItem.colorNum) {\n            case 0:\n                bgColor = 'rgba(0,187,255,.4)';\n                break;\n            case 1:\n                bgColor = 'rgba(80,227,194,.4)';\n                break;\n            case 2:\n                bgColor = 'rgba(255,115,115,.4)';\n                break;\n            case 3:\n                bgColor = 'rgba(255,207,107,.4)';\n                break;\n            default:\n                bgColor = 'rgba(0,187,255,.4)'\n        }\n        // let startTime = 0;\n        // let endTime = 60;\n        seriesData.push({\n            name: listItem.name,\n            value: [\n                index,\n                listItem.startTime,\n                listItem.endTime,\n                listItem.quantity,\n            ],\n            itemStyle: {\n                normal: {\n                    color: bgColor\n                }\n            }\n        });\n    })\n\n});\n\noption = {\n    backgroundColor: '#26263C',\n    tooltip: {\n        formatter: function(params) {\n            //console.log(params)\n            return params.marker + params.name + params.value;\n        }\n    },\n\n    legend: {\n      show: true,\n    //   icon: \"circle\",\n      itemWidth: 16,\n      itemHeight: 16,\n      itemGap: 13,\n      data: ['在线', '离线', '故障', '繁忙'],\n      x: 'center',\n      y: 'center',\n      textStyle: {\n        fontSize: 12,\n        color: \"#fff\",\n      },\n    },\n    grid: {\n        top: 48,\n        left: 100,\n        right: 50,\n        bottom: 50,\n        height: 300,\n    },\n\n    xAxis: {\n        type: '',\n        min: 0,\n        max: 60,\n        scale: true,\n        position: 'buttom',\n        splitNumber: 6,\n       axisLabel: {\n            show: true,\n            interval: 0,\n            color: '#fff',\n        },\n        axisLine: {\n            lineStyle: {\n                color: '#38384d',\n                width: 1, //这里是为了突出显示加上的\n            }\n        },\n        splitLine: {\n            show: true,\n            lineStyle: {\n                color: 'rgba(233,233,233,0.1)'\n            }\n        },\n\n        axisTick: {\n            lineStyle: {\n                color: '#38384d'\n            }\n        }\n    },\n    yAxis: {\n        axisLine: {\n            onZero: false,\n            show: false\n        },\n        \n        axisLabel: {\n            show: true,\n            textStyle: {\n                color: '#ffffff'\n            },\n            fontSize: 14\n        },\n        splitLine: {\n            show: false,\n            lineStyle: {\n                color: ''\n            }\n        },\n        inverse: false,\n        data: yAxisData_plant\n    },\n    series: [\n                {\n        type: 'custom',\n        renderItem: function(params, api) {\n            var categoryIndex = api.value(0);\n            var start = api.coord([api.value(1), categoryIndex]);\n            var end = api.coord([api.value(2), categoryIndex]);\n            var height = api.size([0, 1])[1] * 0.6;\n            var rectShape = echarts.graphic.clipRectByRect({\n                x: start[0],\n                y: start[1] - 5,\n                width: end[0] - start[0],\n                height: 10\n            }, {\n                x: params.coordSys.x,\n                y: params.coordSys.y,\n                width: params.coordSys.width,\n                height: params.coordSys.height\n            });\n\n            return rectShape && {\n                type: 'rect',\n                shape: rectShape,\n                style: api.style()\n            };\n\n        },\n        encode: {\n            x: [1, 2],\n            y: 0\n        },\n        data: seriesData\n    },\n        {\n            show: false,\n        type: 'radar',\n        renderItem: function(params, api) {\n            var categoryIndex = api.value(0);\n            var start = api.coord([api.value(1), categoryIndex]);\n            var end = api.coord([api.value(2), categoryIndex]);\n            var height = api.size([0, 1])[1] * 0.6;\n            var rectShape = echarts.graphic.clipRectByRect({\n                x: start[0],\n                y: start[1] - 5,\n                width: end[0] - start[0],\n                height: 10\n            }, {\n                x: params.coordSys.x,\n                y: params.coordSys.y,\n                width: params.coordSys.width,\n                height: params.coordSys.height\n            });\n\n            return rectShape && {\n                type: 'rect',\n                shape: rectShape,\n                style: api.style()\n            };\n\n        },\n        encode: {\n            x: [1, 2],\n            y: 0\n        },\n        data: seriesData\n    },\n\n    ]\n}"}