{"code":"srcData = [\n    {group: 'Letters', subGroup: 'lowercase', name: 'a', value: 11},\n    {group: 'Letters', subGroup: 'lowercase', name: 'b', value: 41},\n    {group: 'Letters', subGroup: 'uppercase', name: 'C', value: 16},\n    {group: 'Letters', subGroup: 'uppercase', name: 'D', value: 32},\n    {group: 'Letters', subGroup: 'uppercase', name: 'E', value: 34},\n    {group: 'Numbers', subGroup: 'Integer', name: 1, value: 12},\n    {group: 'Numbers', subGroup: 'Integer', name: 2, value: 35},\n    {group: 'Numbers', subGroup: 'Integer', name: 3, value: 23},\n    {group: 'Numbers', subGroup: 'Decimal', name: 2.3, value: 16},\n    {group: 'Numbers', subGroup: 'Decimal', name: 4.5, value: 12}\n];\n\ncovertData = function(src) {\n    var nameList = [];\n    var valueList = [];\n\n    var groupLabelList = [''];\n    var subGroupLabelList = [''];\n\n    var groupTickList = [0];\n    var subGroupTickList = [0];\n\n    var costomList = ['costomTick'];\n\n    var groupTmp = {\n        name: '',\n        count: 0\n    };\n    var subGroupTmp = {\n        name: '',\n        count: 0\n    };\n\n    for (var i = 0; i < src.length; i++) {\n\n        nameList.push(src[i].name);\n        valueList.push(src[i].value);\n        groupLabelList.push('', '');\n        subGroupLabelList.push('', '');\n\n        i === src.length - 1 || groupTmp.name !== '' && groupTmp.name !== src[i + 1].group ?\n            (groupLabelList[i * 2 - groupTmp.count + 1] = src[i].group,\n                groupTmp.name = '',\n                groupTmp.count = 0,\n                groupTickList.push(i * 2 + 2)) :\n            (groupTmp.name = src[i].group,\n                groupTmp.count++);\n\n        if (i === src.length - 1 || subGroupTmp.name !== '' && subGroupTmp.name !== src[i + 1].subGroup) {\n            subGroupLabelList[i * 2 - subGroupTmp.count + 1] = src[i].subGroup,\n            subGroupTmp.name = '';\n            subGroupTmp.count = 0;\n            subGroupTickList.push(i * 2 + 2);\n        } else {\n            subGroupTmp.name = src[i].subGroup;\n            subGroupTmp.count++;\n        }\n\n    }\n\n    return {\n        nameList: nameList,\n        valueList: valueList,\n        groupLabelList: groupLabelList,\n        subGroupLabelList: subGroupLabelList,\n        groupTickList: groupTickList,\n        subGroupTickList: subGroupTickList\n    };\n};\n\ndstData = covertData(srcData);\nconsole.log(dstData);\n\noption = {\n    grid: [{\n        bottom: '20%'\n    }, {\n        bottom: '20%'\n    }, {\n        bottom: '20%'\n    }],\n    xAxis: [{\n        gridIndex: 0,\n        type: 'category',\n        data: dstData.nameList,\n        axisTick: {\n            length: 20\n        }\n    }, {\n        gridIndex: 1,\n        type: 'category',\n        data: dstData.groupLabelList,\n        boundaryGap: false,\n        axisLabel: {\n            margin: 80,\n            interval: 0\n        },\n        axisTick: {\n            length: 100,\n            interval: (index) => dstData.groupTickList.indexOf(index) != -1\n        }\n    }, {\n        gridIndex: 2,\n        type: 'category',\n        data: dstData.subGroupLabelList,\n        boundaryGap: false,\n        axisLabel: {\n            margin: 40,\n            interval: 0\n        },\n        axisTick: {\n            length: 60,\n            interval: (index) => dstData.subGroupTickList.indexOf(index) != -1\n        }\n    }],\n    yAxis: [{\n        gridIndex: 0,\n    }, {\n        gridIndex: 1,\n    }, {\n        gridIndex: 2,\n    }],\n    // Declare several bar series, each will be mapped\n    // to a column of dataset.source by default.\n    series: [{\n        xAxisIndex: 0,\n        yAxisIndex: 0,\n        type: 'bar',\n        name: 'test',\n        label: {\n            show: true,\n            position: 'top'\n        },\n        data: dstData.valueList\n    }]\n};"}