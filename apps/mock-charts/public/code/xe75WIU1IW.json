{"code":"// -10% ~ 10% 随机数\nconst rnd = () => 0.2 * Math.random() - 0.1;\n// 随机漫步\nconst randomWalk = (count) => {\n  const ps = [1];\n  for (let i = 1; i < count; i++) {\n    ps[i] = Number((ps[i - 1] * (1 + rnd())).toFixed(2));\n  }\n  return ps;\n};\n\nconst prices = randomWalk(100);\n\nconst dataSet = prices.map((v, index) => [index, v]);\n\nconst getInfinity = (prices) => {\n    const bIdxs = [];\n    const sIdxs = [];\n    \n    for (let i = 1; i < prices.length - 1; i++) {\n        const prev = prices[i -1];\n        const current = prices[i];\n        const next = prices[i + 1];\n        // 买点\n        if (current <= prev && current < next) {\n            bIdxs.push(i);\n        }\n        // 卖点\n        if(current > prev && current >= next) {\n            sIdxs.push(i);\n        }\n    }\n    \n    // 如果第一笔是卖 将第一个数据作为买点\n    if (sIdxs[0] < bIdxs[0]) {\n        bIdxs.unshift(0);\n    }\n    \n    // 如果最后一笔是买，将最后一个数据作为卖点\n    if (bIdxs[bIdxs.length - 1] > sIdxs[sIdxs.length - 1]) {\n        sIdxs.push(prices.length - 1);\n    }\n    \n    return {bIdxs, sIdxs};\n};\n\nconst { bIdxs, sIdxs } = getInfinity(prices);\n\nconst markPoints = [];\nbIdxs.forEach(v => {\n  markPoints.push({\n    name : '买点',\n    coord: [v, dataSet[v][1]],\n    symbolOffset: [0, 10],\n    itemStyle: {\n      color:'red',\n    },\n   });\n});\n\nsIdxs.forEach(v => {\n  markPoints.push({\n    name : '卖点',\n    coord: [v, dataSet[v][1]],\n    symbolOffset: [0, -10],\n    itemStyle: {\n      color:'yellowgreen',\n    },\n   });\n});\n\noption = {\n    backgroundColor: '#080b30',\n    title: {\n        text: 'quan-infinity',\n        textStyle: {\n          color: '#fff',  \n        },\n    },\n    tooltip: {\n        trigger: 'axis',\n        formatter: params => {\n            console.log(params);\n            const item = params[0];\n            return item.marker + item.data[1];\n        }\n    },\n    grid: {\n        left: 64,\n        right: 16,\n        bottom: 80,\n    },\n    toolbox: {\n        feature: {\n            dataZoom: {\n                yAxisIndex: 'none'\n            },\n            restore: {},\n            saveAsImage: {}\n        }\n    },\n    xAxis: {\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: 'rgba(255,255,255,0.3)'\n            }\n        },\n        axisTick: {\n            show: false,\n        },\n        splitLine: {\n            show: false,\n        },\n    },\n    yAxis: {\n        axisLine: {\n            show: false,\n        },\n        axisTick: {\n            show: false,\n        },\n        axisLabel: {\n            color: 'rgba(255,255,255,0.3)',\n        },\n        splitLine: {\n            show: true,\n            lineStyle: {\n                color: 'rgba(255,255,255,0.3)'\n            }\n        },\n    },\n    dataZoom: [\n        {\n            type: 'inside',\n            start: 0,\n            end: 1000\n        },\n        {\n            start: 0,\n            end: 1000,\n            handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n            handleSize: '80%',\n            handleStyle: {\n                color: '#fff',\n                shadowBlur: 3,\n                shadowColor: 'rgba(0, 0, 0, 0.6)',\n                shadowOffsetX: 2,\n                shadowOffsetY: 2\n            }\n        }\n    ],\n    series: [{\n        type: 'line',\n        lineStyle: {\n            color: \"#6c50f3\",\n        },\n        markPoint : {\n            symbol: 'circle',\n            symbolSize: 10,\n            data : markPoints,\n        },\n        data: dataSet,\n    }],\n};"}