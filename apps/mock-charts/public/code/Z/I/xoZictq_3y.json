{"code":"let x = (Math.random() * 100).toFixed(0);\nlet data = [\n    [\"Time\", 0, 2, 3, 4, 5, 6, 7,8,9,10],\n    [\"MeasuredValue\", \n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0)],\n    [\"CMAQ\",(Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0)],\n    [\"OPAQ\",(Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0),\n    (Math.random() * 100).toFixed(0)]\n] \nlet title = '空气质量AQI'\nlet SymbolType = ['triangle','circle','emptyCircle']\nlet color = ['#000','red','blue']\nlet name = ['实测值','CMAQ','OPAQ']\n\n\n\n\nlet series = [];\nlet source = [];\ndata.map(v=>{\n    source.push(v)\n})\n\nSymbolType.map((v,i)=>{\n    series.push({\n        name:name[i],\n        type:'line',\n        symbol:v,\n        symbolSize:10,\n        color:color[i],\n        seriesLayoutBy: 'row'\n    })\n})\noption = {\n    title: {\n        text: title\n    },\n    tooltip: {\n        trigger: 'axis'\n    },\n    legend: {\n        \n    },\n    dataZoom: [\n        {\n            type: 'slider',\n            show: true,\n            xAxisIndex: [0],\n            start: 1,\n            end: 100\n        }\n    ],\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n    },\n    dataset: {\n        source: source\n    },\n    toolbox: {\n        feature: {\n            saveAsImage: {}\n        }\n    },\n    xAxis: {\n        type: 'category',\n        boundaryGap: false,\n        data: source[0]\n    },\n    yAxis: {\n        type: 'value'\n    },\n    series: series\n};\n"}