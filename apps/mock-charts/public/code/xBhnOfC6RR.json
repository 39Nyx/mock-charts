{"code":"const dataX = [\r\n    \"00:00\",\r\n    \"02:00\",\r\n    \"04:00\",\r\n    \"06:00\",\r\n    \"08:00\",\r\n    \"10:00\",\r\n    \"12:00\",\r\n    \"14:00\",\r\n    \"16:00\",\r\n    \"18:00\",\r\n    \"20:00\",\r\n    \"22:00\",\r\n  ];\r\n  const y = [40, 58, 40, 44, 61, 58, 77, 60, 78, 53, 70, 53];\r\n  const y1 = [50, 48, 44, 62, 41, 78, 57, 70, 68, 93, 60, 73];\r\n  const dataNowY = [90, 96, 84, 106, 102, 136, 134, 130, 146, 143, 130, 126];\r\n  var option = {\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          backgroundColor: \"rgba(33,56,77,1)\",\r\n          borderColor: \"rgba(33,56,77,1)\",\r\n          textStyle: {\r\n            color: \"#fff\",\r\n            fontSize: 14,\r\n          },\r\n          axisPointer: {\r\n            lineStyle: {\r\n              color: \"rgba(19,255,241,1)\",\r\n              type: \"dashed\",\r\n              width: 2,\r\n            },\r\n          },\r\n        },\r\n        legend: {\r\n          right: \"6%\",\r\n          itemWidth: 16,\r\n          itemHeight: 12,\r\n          itemGap: 25,\r\n          textStyle: {\r\n            color: \"#000\",\r\n          },\r\n        },\r\n        grid: {\r\n          top: \"16%\",\r\n          right: \"4%\",\r\n          bottom: \"14%\",\r\n          left: \"6%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          boundaryGap: [\"0\", \"10%\"],\r\n          data: dataX,\r\n          axisLabel: {\r\n            // interval: 0,\r\n            textStyle: {\r\n              color: \"rgba(0,0,0, .7)\",\r\n              fontSize: 14,\r\n            },\r\n          },\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          axisTick: {\r\n            show: false, // 去除刻度线\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n          boundaryGap: [\"0\", \"20%\"],\r\n          axisTick: { show: false },\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"rgba(0,0,0, .7)\",\r\n              fontSize: 14,\r\n            },\r\n          },\r\n          // y轴分割线的颜色\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: \"rgba(0,0,0,.1)\",\r\n              type: \"dashed\",\r\n            },\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"总流量\",\r\n            smooth: true,\r\n            type: \"line\",\r\n            // 填充颜色设置\r\n            areaStyle: {\r\n              color: new echarts.graphic.LinearGradient(\r\n                0,\r\n                0,\r\n                0,\r\n                1,\r\n                [\r\n                  {\r\n                    offset: 0,\r\n                    color: \"rgba(19,255,241,.4)\", // 渐变色的起始颜色\r\n                  },\r\n                  {\r\n                    offset: 0.9,\r\n                    color: \"rgba(19,255,241,0)\", // 渐变线的结束颜色\r\n                  },\r\n                ],\r\n                false\r\n              ),\r\n              shadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n            },\r\n            // 开始不显示拐点， 鼠标经过显示\r\n            showSymbol: false,\r\n            symbolSize: 8,\r\n            // 设置拐点颜色以及边框\r\n            itemStyle: {\r\n              color: \"rgba(19,255,241,1)\",\r\n            },\r\n            data: y1,\r\n          },\r\n          {\r\n            name: \"进园\",\r\n            smooth: true,\r\n            type: \"line\",\r\n            // 填充颜色设置\r\n            areaStyle: {\r\n              color: new echarts.graphic.LinearGradient(\r\n                0,\r\n                0,\r\n                0,\r\n                1,\r\n                [\r\n                  {\r\n                    offset: 0,\r\n                    color: \"rgba(241,162,42,.4)\", // 渐变色的起始颜色\r\n                  },\r\n                  {\r\n                    offset: 0.9,\r\n                    color: \"rgba(241,162,42,0)\", // 渐变线的结束颜色\r\n                  },\r\n                ],\r\n                false\r\n              ),\r\n              shadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n            },\r\n            // 开始不显示拐点， 鼠标经过显示\r\n            showSymbol: false,\r\n            symbolSize: 4,\r\n            // 设置拐点颜色以及边框\r\n            itemStyle: {\r\n              color: \"rgba(241,162,42,1)\",\r\n            },\r\n            data: y,\r\n          },\r\n          {\r\n            name: \"出园\",\r\n            smooth: true,\r\n            type: \"line\",\r\n            // 填充颜色设置\r\n            areaStyle: {\r\n              color: new echarts.graphic.LinearGradient(\r\n                0,\r\n                0,\r\n                0,\r\n                1,\r\n                [\r\n                  {\r\n                    offset: 0,\r\n                    color: \"rgba(0,133,255,.4)\", // 渐变色的起始颜色\r\n                  },\r\n                  {\r\n                    offset: 0.9,\r\n                    color: \"rgba(0,133,255,0)\", // 渐变线的结束颜色\r\n                  },\r\n                ],\r\n                false\r\n              ),\r\n              shadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n            },\r\n            // 开始不显示拐点， 鼠标经过显示\r\n            showSymbol: false,\r\n            symbolSize: 4,\r\n            // 设置拐点颜色以及边框\r\n            itemStyle: {\r\n              color: \"rgba(0,133,255,1)\",\r\n            },\r\n            data: dataNowY,\r\n          },\r\n        ],\r\n    }\r\n    \r\n    let currentIndex = -1;\r\n      setInterval(() => {\r\n        const dataLen = 12;\r\n        // 取消之前高亮的图形\r\n        myChart.dispatchAction({\r\n          type: \"downplay\",\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n        currentIndex = (currentIndex + 1) % dataLen;\r\n        // 高亮当前图形\r\n        myChart.dispatchAction({\r\n          type: \"highlight\",\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n        // 显示 tooltip\r\n        myChart.dispatchAction({\r\n          type: \"showTip\",\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n    }, 3000);"}