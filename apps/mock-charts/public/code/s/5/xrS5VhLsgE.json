{"code":"                let color = [\n                    \"#E82541\",\n                ];\n                let xAxisData = [\"1.10\", \"1.11\", \"1.12\", \"1.13\", \"1.14\", \"1.15\", \"1.16\", \"1.17\"];\n                let yAxisData1 = [100, 138, 150, 173, 180, 150, 180, 230];\n                const hexToRgba = (hex, opacity) => {\n                    let rgbaColor = \"\";\n                    let reg = /^#[\\da-f]{6}$/i;\n                    if (reg.test(hex)) {\n                        rgbaColor = `rgba(${parseInt(\"0x\" + hex.slice(1, 3))},${parseInt(\n                            \"0x\" + hex.slice(3, 5)\n                        )},${parseInt(\"0x\" + hex.slice(5, 7))},${opacity})`;\n                    }\n                    return rgbaColor;\n                }\n                var data = [\n                    ['1.10', 100],\n                    ['1.11', 138],\n                    ['1.12', 150],\n                    ['1.13', 173],\n                    ['1.14', 180],\n                    ['1.15', 150],\n                    ['1.16', 180],\n                    ['1.17', 230],\n\n                ];\n                let type = [] //1蓝色拐点，0红色拐点\n                let symbolArr = [];\n                var dataa = [];\n                for (var i = 0; i < data.length; i++) {\n                    dataa.push(data[i][1])\n                    type.push(data[i][1])\n                }\n                type.forEach(function (v, i) {\n                    symbolArr[i] = {\n                        value: dataa[i],\n                        symbolSize: v == 230 ? 13 : 0,\n                        itemStyle: {\n                            normal: {\n                                color: v == 230 ? '#E82541' : '#1572E9',\n                                shadowBlur: 70,\n                                shadowColor: '#333'\n                            }\n                        }\n                    };\n                });\n                var sum = 0;\n                data.push(['', avg])\n                var avg = sum / data.length;\n                option = {\n                    color: color,\n                    grid: {\n                        top: 50,\n                        left: 20,\n                        right: 20,\n                        bottom: 40,\n                    },\n                    xAxis: [{\n                        type: \"category\",\n                        boundaryGap: false,\n                        axisLabel: {\n                            formatter: '{value}',\n                            textStyle: {\n                                color: \"rgba(255, 255, 255, 0.6)\"\n                            }\n                        },\n                        axisLine: {\n                            lineStyle: {\n                                color: \"#D9D9D9\"\n                            }\n                        },\n                        axisTick: {\n                            show: false\n                        },\n                        data: xAxisData,\n                    }],\n                    yAxis: [\n                        {\n                            type: \"value\",\n                            axisLabel: {\n                                show: false,\n                                textStyle: {\n                                    color: \"#666\"\n                                }\n                            },\n\n                            nameTextStyle: {\n                                color: \"#666\",\n                                fontSize: 12,\n                                lineHeight: 40\n                            },\n                            // 分割线\n                            splitLine: {\n                                lineStyle: {\n                                    type: \"solid\",\n                                    color: \"rgba(29, 34, 54, 1.00)\"\n                                }\n                            },\n                            axisLine: {\n                                show: false\n                            },\n                            axisTick: {\n                                show: false\n                            }\n                        },\n                        {\n                            type: 'value',\n                            show: false,\n                            axisTick: {\n                                show: false,\n                            },\n                            splitLine: {\n                                show: false,\n                            }\n                        }\n                    ],\n                    series: [\n                        {\n                            name: \"超标数\",\n                            type: \"line\",\n                            symbolSize: 8,\n                            zlevel: 3,\n                            label: {\n                                normal: {\n                                    show: true,\n                                    position: \"top\",\n                                    color: '#fff'\n                                }\n                            },\n                            symbol: 'circle',\n                            areaStyle: {\n                                normal: {\n                                    color: new echarts.graphic.LinearGradient(\n                                        0,\n                                        0,\n                                        0,\n                                        1,\n                                        [{\n                                            offset: 0,\n                                            color: hexToRgba(color[0], 0.8)\n                                        },\n                                            {\n                                                offset: 1,\n                                                color: hexToRgba(color[0], 0.1)\n                                            }\n                                        ],\n                                        false\n                                    ),\n                                    shadowColor: hexToRgba(color[0], 0.1),\n                                    shadowBlur: 10\n                                }\n                            },\n                            data: yAxisData1,\n                            animationEasingUpdate: 'linear',\n                            animationDurationUpdate: 1500,\n                        },\n                        {\n                            label: {\n                                show: false,\n                            },\n                            type: 'effectScatter',\n                            coordinateSystem: 'cartesian2d',\n                            data: symbolArr,\n                            yAxisIndex: 1,\n                            symbolSize: 0,\n                            showEffectOn: 'render',\n                            rippleEffect: {\n                                brushType: 'stroke'\n                            },\n                            hoverAnimation: true\n                        }\n                    ],\n\n                };"}