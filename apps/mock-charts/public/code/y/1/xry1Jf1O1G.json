{"code":"option = {\n    title: {\n        text: '大规模散点图'\n    },\n    tooltip : {\n        trigger: 'axis',\n        showDelay : 0,\n        axisPointer:{\n            show: true,\n            type : 'cross',\n            lineStyle: {\n                type : 'dashed',\n                width : 1\n            }\n        },\n        zlevel: 1\n    },\n    legend: {\n        data:['sin','cos']\n    },\n    toolbox: {\n        show : true,\n        feature : {\n            mark : {show: true},\n            dataZoom : {show: true},\n            dataView : {show: true, readOnly: false},\n            restore : {show: true},\n            saveAsImage : {show: true}\n        }\n    },\n    xAxis : [\n        {\n            type : 'value',\n            scale:true\n        }\n    ],\n    yAxis : [\n        {\n            type : 'value',\n            scale:true\n        }\n    ],\n    series : [\n        {\n            name:'sin',\n            type:'scatter',\n            large: true,\n            symbolSize: 3,\n            data: (function () {\n                var d = [];\n                var len = 10000;\n                var x = 0;\n                while (len--) {\n                    x = (Math.random() * 10).toFixed(3) - 0;\n                    d.push([\n                        x,\n                        //Math.random() * 10\n                        (Math.sin(x) - x * (len % 2 ? 0.1 : -0.1) * Math.random()).toFixed(3) - 0\n                    ]);\n                }\n                //console.log(d)\n                return d;\n            })()\n        },\n        {\n            name:'cos',\n            type:'scatter',\n            large: true,\n            symbolSize: 2,\n            data: (function () {\n                var d = [];\n                var len = 20000;\n                var x = 0;\n                while (len--) {\n                    x = (Math.random() * 10).toFixed(3) - 0;\n                    d.push([\n                        x,\n                        //Math.random() * 10\n                        (Math.cos(x) - x * (len % 2 ? 0.1 : -0.1) * Math.random()).toFixed(3) - 0\n                    ]);\n                }\n                //console.log(d)\n                return d;\n            })()\n        }\n    ]\n};\n"}