{"code":"//ecStat 是 ECharts 的统计扩展，需要额外添加扩展脚本，参加上方“脚本”\n// 详情请移步 https://github.com/ecomfe/echarts-stat\n// 右图可视化聚类算法动态分割的过程（聚类算法可以支持多维数值属性）\n\n\nvar uploadedDataURL = \"/asset/get/s/data-1487209466925-BJQZVKGYx.json\";\n\n$.getJSON(uploadedDataURL, function(data) {\n    var clusterNumber = 6;\n    var step = ecStat.clustering.hierarchicalKMeans(data, clusterNumber, true);\n    var result;\n    var option = {\n        timeline: {\n            top: 'center',\n            right: 35,\n            height: 300,\n            width: 10,\n            inverse: true,\n            playInterval: 2500,\n            symbol: 'none',\n            orient: 'vertical',\n            axisType: 'category',\n            autoPlay: true,\n            label: {\n                normal: {\n                    show: false\n                }\n            },\n            data: []\n        },\n        baseOption: {\n            xAxis: {\n                type: 'value'\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [{\n                type: 'scatter'\n            }]\n        },\n        options: []\n    };\n\n    for (var i = 0; !(result = step.next()).isEnd; i++) {\n\n        option.options.push(getOption(result, clusterNumber));\n        option.timeline.data.push(i + '');\n\n    }\n\n    myChart.setOption(option);\n\n    function getOption(result, k) {\n        var clusterAssment = result.clusterAssment;\n        var centroids = result.centroids;\n        var ptsInCluster = result.pointsInCluster;\n        var color = ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'];\n        var series = [];\n        for (i = 0; i < k; i++) {\n            series.push({\n                name: 'scatter' + i,\n                type: 'scatter',\n                label: {\n                    emphasis: {\n                        show: true\n                    }\n                },\n                animation: false,\n                data: ptsInCluster[i],\n                markPoint: {\n                    symbolSize: 29,\n                    label: {\n                        normal: {\n                            show: false\n                        },\n                        emphasis: {\n                            show: true,\n                            position: 'top',\n                            formatter: function(params) {\n                                return Math.round(params.data.coord[0] * 100) / 100 + '  ' +\n                                    Math.round(params.data.coord[1] * 100) / 100 + ' ';\n                            },\n                            textStyle: {\n                                color: '#000'\n                            }\n                        }\n                    },\n                    itemStyle: {\n                        normal: {\n                            opacity: 0.7\n                        }\n                    },\n                    data: [{\n                        coord: centroids[i]\n                    }]\n                }\n            });\n        }\n\n        return {\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'cross'\n                }\n            },\n            series: series,\n            color: color\n        };\n    }\n});"}