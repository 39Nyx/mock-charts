{"code":" const startAlpha = 1;\n      const endAlpha = 0;\n      var color2 = ['#1DC3EF', '#E17E4E', '#0AB273', '#F08903', '#03B9F7'];\n      const color = [\n          {\n        r: 31,\n        g: 209,\n        b: 255\n      },\n        {\n          r: 3,\n          g: 191,\n          b: 254\n        },\n        {\n          r: 255,\n          g: 145,\n          b: 2\n        },\n        {\n          r: 11,\n          g: 191,\n          b: 122\n        },\n        {\n          r: 240,\n          g: 133,\n          b: 82\n        }\n      ]\n      const data = [\n          {\n        name: \"新疆天正通达\",\n        value: 2025.76,\n        _startArc: 0,\n        _endArc: 3.0471975511965976,\n        _color: \"#1DC3EF\",\n        _percent: 0.16666666666666666\n      }, {\n        name: \"西安省体广场\",\n        value: 2221.06,\n        _startArc: 0,\n        _endArc: 3.0471975511965976,\n        _color: \"#E17E4E\",\n        _percent: 0.16666666666666666\n      }, {\n        name: \"江苏绿地集团\",\n        value: 2000.01,\n        _startArc: 1.0471975511965976,\n        _endArc: 0,\n        _color: \"#0AB273\",\n        _percent: 0.16666666666666666\n      }, {\n        name: \"家利物业\",\n        value: 1236.23,\n        _startArc: 3.0471975511965976,\n        _endArc: 0,\n        _color: \"#F08903\",\n        _percent: 0.16666666666666666\n      }, {\n        name: \"西安省体广场\",\n        value: 1236.23,\n        _startArc: 3.0471975511965976,\n        _endArc: 0,\n        _color: \"#03B9F7\",\n        _percent: 0.16666666666666666\n      }]\n\n      /**\n       * 线性渐变起止方向的计算方法\n       *\n       *\n       * @param {*} startArc 开始角度\n       * @param {*} endArc 结束角度\n       * @returns 四个坐标 x,y,x2,y2\n       */\n      function getCoordinates(startArc, endArc) {\n        const posi = [\n          Math.sin(startArc),\n          -Math.cos(startArc),\n          Math.sin(endArc),\n          -Math.cos(endArc)\n        ]\n        const dx = posi[2] - posi[0]\n        const dy = posi[3] - posi[1]\n\n        return getLocation(dx, dy)\n      }\n\n      function getLocation(dx, dy) {\n        const tanV = dx / dy\n        const directSign = Math.abs(tanV) < 1\n        const t = directSign ? tanV : 1 / tanV\n\n        const sign1 = t > 0 ? 1 : -1\n        const sign2 = dx > 0 ? 1 : -1\n        const sign = directSign ? sign1 * sign2 : sign2\n\n        const group1 = [0.5 - sign * t / 2, 0.5 + sign * t / 2]\n        const group2 = sign > 0 ? [0, 1] : [1, 0]\n        const group = [...group1, ...group2]\n        const keys = directSign ? ['x', 'x2', 'y', 'y2'] : ['y', 'y2', 'x', 'x2']\n\n        let res = {}\n        keys.forEach((k, idx) => {\n          res[k] = group[idx]\n        })\n        return res\n      }\n\n      /**\n       * 给数据写入 样式(线性渐变)\n       *\n       * @param {*} datas 数据\n       * @param {*} colorlist 颜色列表\n       * @param {*} startAlpha 开始颜色的透明度\n       * @param {*} endAlpha 结束颜色透的明度\n       * @returns 带样式的数据\n       */\n      function setGradientColorInItemSyle(datas, colorlist, startAlpha, endAlpha) {\n        for (let i = 0; i < datas.length; i++) {\n          const color = colorlist[i];\n          const startArc = datas[i]._startArc;\n          const endArc = datas[i]._endArc;\n          // 这里计算了 线性渐变的起止方向\n          const coordinates = getCoordinates(startArc, endArc);\n          datas[i].itemStyle = {\n            color: {\n              ...coordinates,\n              type: \"linear\",\n              global: false,\n              // 这里给了 线性渐变的起止颜色\n              colorStops: [{\n                offset: 0,\n                color: `rgba(${color.r}, ${color.g}, ${color.b}, ${startAlpha})`\n              }, {\n                offset: 1,\n                color: `rgba(${color.r}, ${color.g}, ${color.b}, ${endAlpha})`\n              }]\n            }\n          }\n        }\n        return datas\n      }\n\n      var height = 50;\n      var option = {\n        color: ['#1DC3EF', '#E17E4E', '#0AB273', '#F08903', '#03B9F7'],\n        tooltip: {\n          trigger: \"item\",\n        },\n        series: [{\n          type: \"pie\",\n          data: setGradientColorInItemSyle(data, color, endAlpha, startAlpha),\n          // \"animation\": false,\n          radius: [height, height + 10],\n          center: [\"50%\", \"50%\"],\n          itemStyle: {\n            normal: {\n              label: {\n                show: true,\n                position: 'outside',\n                color: 'rgba(172, 195, 237, 1.00)',\n              },\n              labelLine: {\n                length: 20,\n                length2: 20,\n                show: true,\n              }\n            }\n          },\n        }]\n      };"}