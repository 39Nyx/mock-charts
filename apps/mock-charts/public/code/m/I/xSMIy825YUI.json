{"code":"var myData = [\n    {\n        value: 137,\n        name: '数学',\n    },\n    {\n        value: 103,\n        name: '语文',\n    },\n    {\n        value: 124,\n        name: '英语',\n    },\n    {\n        value: 180,\n        name: '理综',\n    },\n];\noption = {\n    color: ['#1aa3ff', '#04f9fa', '#16bd87', '#c961ff', '#7cfc12'],\n    tooltip: {\n        trigger: 'item',\n        formatter: '{b}：{c} ({d}%)',\n    },\n    legend: {\n        bottom: '20%',\n        itemWidth: 10,\n        itemHeight: 10,\n        textStyle: {\n            color: '#fff',\n            fontSize: '14',\n        },\n    },\n    series: [\n        // 内圈\n        {\n            type: 'pie',\n            center: ['50%', '40%'],\n            radius: ['33.5%', '35.5%'],\n            silent: true, //取消高亮\n            label: { show: false, position: 'center' },\n            data: myData,\n        },\n        // 外圈\n        {\n            type: 'pie',\n            center: ['50%', '40%'],\n            radius: ['40%', '50%'],\n            label: { show: false, position: 'center' },\n            emphasis: {\n                label: {\n                    show: true,\n                    fontSize: 33,\n                    lineHeight: 45,\n                    formatter: (params) => {\n                        return '{name|' + params.name + '}\\n{value|' + params.value + '}';\n                    },\n                    rich: {\n                        name: {\n                            color: '#fff',\n                        },\n                        value: {\n                            color: '#04F9FA',\n                        },\n                    },\n                },\n            },\n            data: myData,\n        },\n    ],\n};\n\nactiveLoop();\n\nfunction activeLoop() {\n    // 循环高亮显示   seriesIndex：1   外圈高亮\n    let index = -1; // 高亮下标\n    const dataLength = myData.length;\n    var timeoutloop = setInterval(() => {\n        // 清除之前的高亮\n        myChart.dispatchAction({\n            type: 'downplay',\n            seriesIndex: 1,\n            dataIndex: index,\n        });\n        myChart.dispatchAction({\n            type: 'hideTip',\n            seriesIndex: 1,\n            dataIndex: index,\n        });\n        index = (index + 1) % dataLength;\n        // 当前下标高亮\n        myChart.dispatchAction({\n            type: 'highlight',\n            seriesIndex: 1,\n            dataIndex: index,\n        });\n        myChart.dispatchAction({\n            type: 'showTip',\n            seriesIndex: 1,\n            dataIndex: index,\n        });\n    }, 2000);\n    // 鼠标划入\n    myChart.on('mouseover', (e) => {\n        // 停止定时器，清除之前的高亮\n        clearInterval(timeoutloop);\n        myChart.dispatchAction({\n            type: 'downplay',\n            seriesIndex: 1,\n            dataIndex: index,\n        });\n        myChart.dispatchAction({\n            type: 'hideTip',\n            seriesIndex: 1,\n            dataIndex: index,\n        });\n    });\n    // 鼠标离开\n    myChart.on('mouseout', (e) => {\n        activeLoop();\n    });\n}\n"}