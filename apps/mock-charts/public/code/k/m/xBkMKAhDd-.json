{"code":"/**\n * \n * 测试自动遍历源数据以整合成可以\n * 自动渲染的polyline的数据数组\n * \n */\nvar coors1 = [\n    [100, 220],\n    [200, 182],\n    [300, 191],\n    [400, 234],\n    [500, 290],\n    [600, 330],\n    [700, 310]\n];\nvar coors2 = [\n    [100, 420],\n    [200, 382],\n    [300, 391],\n    [400, 434],\n    [500, 490],\n    [600, 530],\n    [700, 510]\n];\n\nvar coors3 = [\n    [100, 620],\n    [200, 582],\n    [300, 591],\n    [400, 634],\n    [500, 690],\n    [600, 730],\n    [700, 710]\n];\nvar coors = [coors1, coors2, coors3];\nvar optionSeries = [];\nvar legendData = [];\nvar renderLoop = function(sourceData, i) {\n\n        var renderLineItem = function(params, api) {\n\n            var points = echarts.util.map(sourceData[i], function(entry, index) {\n\n                var point = api.coord([entry[0], entry[1]]);\n                return point;\n            });\n\n            return {\n                type: 'polyline',\n                shape: {\n                    points: points,\n                },\n                style: {\n                    fill: null,\n                    stroke: api.visual('color'),\n                    lineWidth: 2\n                }\n            };\n        }\n        var num = i + 1;\n        legendData.push({\n            name: 'Polyline' + num\n        }, {\n            name: 'EffectScatter' + num\n        });\n        optionSeries.push({\n            type: 'custom',\n            name: 'Polyline' + num,\n            renderItem: renderLineItem,\n            encode: {\n                x: 0,\n                y: 1\n            },\n            data: [\n                [1, 0]\n            ]\n        }, {\n            type: 'effectScatter',\n            name: 'EffectScatter' + num,\n            symbol: 'circle',\n            symbolSize: 10,\n            data: sourceData[i]\n        });\n    }\n    //遍历元数据，自动生成polyline\nfor (var i = 0; i < coors.length; i++) {\n    renderLoop(coors, i);\n}\n\noption = {\n    title: {\n        text: 'Polyline Chart with scatters'\n    },\n    legend: {\n        data: legendData,\n        left: 0,\n        top: 50\n    },\n    grid: {\n      top:100  \n    },\n    xAxis: {\n        min: 0,\n        max: 1000\n    },\n    yAxis: {\n        min: 0,\n        max: 1000\n    },\n    tooltip: {\n\n    },\n    series: optionSeries\n};\nconsole.log(optionSeries);"}