{"code":"const list = [\n  { name: '1公司', value: '12400' },\n  { name: '2公司', value: '10200' },\n  { name: '3公司', value: '8500' },\n  { name: '4公司', value: '8300' },\n  { name: '5公司', value: '6200' },\n  { name: '6公司', value: '6200' },\n  { name: '7公司', value: '4100' }\n];\n\n// 对照渐变的颜色\nconst colorList = [\n  { name: '1公司', from: '#7416F7', to: '#E021FD' },\n  { name: '2公司', from: '#7416F7', to: '#E021FD' },\n  { name: '3公司', from: '#4CA0FE', to: '#4DFAE0' },\n  { name: '4公司', from: '#4CA0FE', to: '#4DFAE0' },\n  { name: '5公司', from: '#FE7C04', to: '#FED020' },\n  { name: '6公司', from: '#FE7C04', to: '#FED020' },\n  { name: '7公司', from: '#6A6A9F', to: '#9980FA' }\n];\n\noption = {\n  tooltip: {\n    show: false // 不显示鼠标移入提示框组件\n  },\n  legend: {\n    show: false // 不显示图列组件\n  },\n  grid: {\n    // 直角坐标系绘图网格\n    top: 0,\n    left: 0\n  },\n  xAxis: {\n    show: false // 不显示x轴\n  },\n  yAxis: [\n    {\n      type: 'category',\n      inverse: true, // 倒叙，false会从小到大排\n      axisLine: {\n        show: false // 不显示坐标轴轴线\n      },\n      axisTick: {\n        show: false // 不显示刻度线\n      },\n      offset: -20,\n      zlevel: 100,\n      position: 'left',\n      axisLabel: {\n        textStyle: {\n          color: '#fff',\n          align: 'left'\n        }\n      },\n      data: list.map((item) => item.name)\n    }\n  ],\n  series: [\n    {\n      barCategoryGap: '20%', // 柱间距，若是想要该属性生效，则不能设置barWidth属性\n      name: 'value',\n      type: 'bar',\n      // 文本标签\n      label: {\n        show: true,\n        color: '#fff',\n        formatter: (info) => {\n          return info.value;\n        },\n        position: 'right'\n      },\n      // 柱条样式\n      itemStyle: {\n        color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [\n          {\n            offset: 0,\n            color: '#7416F7'\n          },\n          {\n            offset: 1,\n            color: '#E021FD'\n          }\n        ]),\n        barBorderRadius: 50 // 柱条圆角\n      },\n      data: list.map((item) => {\n        let itemStyle;\n        colorList.forEach((color) => {\n          if (item.name === color.name) {\n            // 渐变颜色\n            itemStyle = {\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [\n                {\n                  offset: 0,\n                  color: color.from\n                },\n                {\n                  offset: 1,\n                  color: color.to\n                }\n              ]),\n              barBorderRadius: 50 // 柱条圆角\n            };\n          }\n        });\n        return {\n          name: item.name,\n          value: item.value,\n          itemStyle\n        };\n      })\n    }\n  ]\n};\n"}