{"code":"let min = 8,\n    max = 40;\nlet data = (() => {\n    let count = 50;\n    let set = new Set();\n    while (count--) {\n        set.add(Math.floor(Math.random() * (max - min)) + min);\n    }\n    return [...set].map((v) => ({\n        value: v,\n        name: `${v}`\n    }))\n})();\n\n// 获取比例尺,domain: 输入域，range 输出域\nfunction getScale([d1, d2], [r1, r2]) {\n    return function(val) {\n        return (val - d1) / (d2 - d1) * (r2 - r1) + r1;\n    };\n}\n\n// value 对应的比例尺\n// 泡泡大小\nlet scale = getScale([min, max], [32, 80]);\n// label字体大小\nlet scaleFontSize = getScale([min, max], [20, 38]);\n// 对应类别categories根据value 值对应5种\nlet scaleCategory = getScale([min, max], [0, 4.99]);\n\ndata = data.map((item, index) => {\n    let {\n        value\n    } = item;\n    return Object.assign(item, {\n        symbolSize: scale(value),\n        category: Math.floor(scaleCategory(value)),\n        label: {\n            fontSize: parseInt(scaleFontSize(value))\n        }\n    });\n});\noption = {\n    series: [{\n        type: 'graph',\n        layout: 'force',\n        legendHoverLink: false,\n        force: {\n            repulsion: 160,\n            edgeLength: 70\n        },\n        categories: [{\n                itemStyle: {\n                    color: '#409EFF'\n                }\n            },\n            {\n                itemStyle: {\n                    color: '#67C23A'\n                }\n            },\n            {\n                itemStyle: {\n                    color: '#E6A23C'\n                }\n            },\n            {\n                itemStyle: {\n                    color: '#F56C6C'\n                }\n            },\n            {\n                itemStyle: {\n                    color: '#ff7edb'\n                }\n            }\n        ],\n        label: {\n            normal: {\n                show: true\n            }\n        },\n        data\n    }]\n};"}