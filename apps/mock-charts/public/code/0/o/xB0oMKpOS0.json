{"code":"var data = [{\n        name: 'item1',\n        value: parseInt(Math.random() * 100)\n    },\n    {\n        name: 'item2',\n        value: parseInt(Math.random() * 100)\n    },\n    {\n        name: 'item3',\n        value: parseInt(Math.random() * 100)\n    },\n    {\n        name: 'item4',\n        value: parseInt(Math.random() * 100)\n    },\n    {\n        name: 'item5',\n        value: parseInt(Math.random() * 100)\n    },\n    {\n        name: 'item6',\n        value: parseInt(Math.random() * 100)\n    },\n    {\n        name: 'item7',\n        value: parseInt(Math.random() * 100)\n    },\n    {\n        name: 'item8',\n        value: parseInt(Math.random() * 100)\n    },\n    {\n        name: 'item9',\n        value: parseInt(Math.random() * 100)\n    },\n    {\n        name: 'item10',\n        value: parseInt(Math.random() * 100)\n    }\n]\nvar data = data.sort((a, b) => b.value - a.value)\nvar max = Math.max(...data.map(item => item.value))\nvar len = data.length\nvar singleLen = Math.round(len / 2)\nvar otherLen = len - singleLen\nvar data1 = data.slice(0, singleLen)\nvar data2 = data.slice(singleLen)\nconsole.log(data1)\n\noption = {\n    backgroundColor: '#333',\n    color: '#409EFF',\n    legend: {\n        right: 10,\n    },\n    tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n            type: 'shadow'\n        }\n    },\n    grid: [{\n        x: '5%',\n        y: '5%',\n        width: '40%',\n        height: '100%'\n        // containLabel: true\n    }, {\n        x2: '5%',\n        y: '5%',\n        width: '40%',\n        height: otherLen / singleLen * 100 + '%'\n        // containLabel: true\n    }],\n    yAxis: [{\n        type: 'category',\n        gridIndex: 0,\n        axisLine: {\n            show: 0\n        },\n        axisLabel: {\n            verticalAlign: 'bottom',\n            align: 'left',\n            padding: [0, 0, 15, 10],\n            color: '#fff',\n            fontSize: '16',\n            formatter: (p, index) => {\n                return '{index|' + (index + 1) + '} ' + p\n            },\n            rich: {\n                index: {\n                    color: '#fff',\n                    fontSize: '16',\n                    backgroundColor: '#409EFF',\n                    borderRadius: 5,\n                    width: 20,\n                    height: 20,\n                    align: 'center',\n                }\n            }\n        },\n        axisTick: {\n            show: 0\n        },\n        inverse: true,\n        data: data1.map(item => item.name)\n    }, {\n        type: 'category',\n        gridIndex: 0,\n        axisLine: {\n            show: 0\n        },\n        axisLabel: {\n            verticalAlign: 'bottom',\n            align: 'right',\n            padding: [0, 0, 15, 10],\n            textStyle: {\n                color: '#fff',\n                fontSize: '16',\n            }\n        },\n        axisTick: {\n            show: 0\n        },\n        inverse: true,\n        data: data1.map(item => item.value)\n    }, {\n        type: 'category',\n        gridIndex: 1,\n        axisLine: {\n            show: 0\n        },\n        axisLabel: {\n            verticalAlign: 'bottom',\n            align: 'left',\n            padding: [0, 0, 15, 10],\n            color: '#fff',\n            fontSize: '16',\n            formatter: (p, index) => {\n                return '{index|' + (index + singleLen + 1) + '} ' + p\n            },\n            rich: {\n                index: {\n                    color: '#fff',\n                    fontSize: '16',\n                    backgroundColor: '#409EFF',\n                    borderRadius: 5,\n                    width: 20,\n                    height: 20,\n                    align: 'center',\n                }\n            }\n        },\n        axisTick: {\n            show: 0\n        },\n        inverse: true,\n        data: data2.map(item => item.name)\n    }, {\n        type: 'category',\n        gridIndex: 1,\n        axisLine: {\n            show: 0\n        },\n        axisLabel: {\n            verticalAlign: 'bottom',\n            align: 'right',\n            padding: [0, 0, 15, 10],\n            textStyle: {\n                color: '#fff',\n                fontSize: '16',\n            }\n        },\n        axisTick: {\n            show: 0\n        },\n        inverse: true,\n        data: data2.map(item => item.value)\n    }],\n    xAxis: [{\n        show: 0,\n        type: 'value',\n        gridIndex: 0,\n        max: max,\n        axisLine: {\n            show: 0\n        },\n        axisTick: {\n            show: 0\n        },\n        splitLine: {\n            show: 0\n        }\n    }, {\n        show: 0,\n        gridIndex: 1,\n        max: max,\n        type: 'value',\n        axisLine: {\n            show: 0\n        },\n        axisTick: {\n            show: 0\n        },\n        splitLine: {\n            show: 0\n        }\n    }],\n    series: [{\n        type: 'bar',\n        barWidth: 10,\n        xAxisIndex: 0,\n        yAxisIndex: [0,1],\n        itemStyle: {\n            barBorderRadius: 5\n        },\n        showBackground: true,\n        backgroundStyle: {\n            color: '#E9ECEF',\n            barBorderRadius: 5,\n        },\n        data: data1\n    }, {\n        type: 'bar',\n        barWidth: 10,\n        xAxisIndex: 1,\n        yAxisIndex: [2,3],\n        itemStyle: {\n            barBorderRadius: 5\n        },\n        showBackground: true,\n        backgroundStyle: {\n            color: '#E9ECEF',\n            barBorderRadius: 5,\n        },\n        data: data2\n    }]\n}\n// background-image: linear-gradient(0deg, rgba(34,115,135,0.46) 0%, #3DE2ED 100%);"}