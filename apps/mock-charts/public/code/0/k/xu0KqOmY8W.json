{"code":"state = {\n    dataList: [200, 182, 191, 234, 290, 330, 310],\n    dataArray: [],\n    dataArray2: [],\n};\n(color1 = ['#FF3333', '#FF7744', '#FFCC22', '#33FF33', '#33CCFF', '#7744FF', '#E93EFF']),\n    (color2 = ['#FF8888', '#FFA488', '#FFDD55', '#66FF66', '#77DDFF', '#9F88FF', '#E38EFF']),\n    (color3 = ['#FFCCCC', '#FFC8B4', '#FFEE99', '#99FF99', '#CCEEFF', '#CCBBFF', '#F0BBFF']);\n\n(aar = []), (aar2 = []);\n\nbarWidth = 30;\nstate.dataList.map((item, index) => {\n    let obj = {\n        value: item,\n        itemStyle: {\n            color: new echarts.graphic.LinearGradient(\n                0,\n                1,\n                0,\n                0,\n                [\n                    {\n                        offset: 0,\n                        color: color1[index], // 0% 处的颜色\n                    },\n                    {\n                        offset: 0.6,\n                        color: color2[index], // 60% 处的颜色\n                    },\n                    {\n                        offset: 1,\n                        color: color3[index], // 100% 处的颜色\n                    },\n                ],\n                false\n            ),\n        },\n    };\n    aar.push(Object.assign({}, obj));\n});\nstate.dataList.map((item, index) => {\n    let obj = {\n        value: item,\n        itemStyle: {\n            color: new echarts.graphic.LinearGradient(\n                0,\n                1,\n                0,\n                0,\n                [\n                    {\n                        offset: 0,\n                        color: color1[index], // 0% 处的颜色\n                    },\n                    {\n                        offset: 0.6,\n                        color: color2[index], // 60% 处的颜色\n                    },\n                    {\n                        offset: 1,\n                        color: color3[index], // 100% 处的颜色\n                    },\n                ],\n                false\n            ),\n            borderWidth: 1,\n            borderColor: color1[index],\n            shadowColor: 'rgba(0, 0, 0, 0.2)',\n            shadowBlur: 1,\n        },\n    };\n    aar2.push(Object.assign({}, obj));\n});\nstate.dataArray = aar;\nstate.dataArray2 = aar2;\nconsole.log(state);\noption = {\n    backgroundColor: '#010d3a',\n    xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        axisLine: {\n            show: false,\n            lineStyle: {\n                color: '#fff',\n            },\n        },\n        axisLabel: {\n            show: true,\n            margin: 25,\n            rotate: 40,\n            color: 'white',\n            fontSize: 16,\n        },\n        axisTick: {\n            show: false,\n        },\n    },\n    yAxis: {\n        type: 'value',\n        axisLine: {\n            lineStyle: {\n                color: '#fff',\n            },\n        },\n        axisLabel: {\n            show: false,\n        },\n        splitLine: {\n            show: false,\n            lineStyle: {\n                color: 'rgba(255,255,255,0.2)',\n                width: 2,\n            },\n        },\n    },\n    tooltip: {\n        show: true,\n        orient: 'vertical',\n        formatter: '{b0}: {c0}',\n    },\n    series: [\n        {\n            type: 'bar',\n            barWidth: barWidth,\n            z: 1,\n            data: state.dataArray,\n        },\n        {\n            z: 3,\n            type: 'pictorialBar',\n            symbolPosition: 'start',\n            data: state.dataArray,\n            symbol: 'diamond',\n            symbolOffset: [0, '50%'],\n            symbolSize: [barWidth, 10],\n            silent: true,\n        },\n        {\n            z: 3,\n            type: 'pictorialBar',\n            symbolPosition: 'end',\n            data: state.dataArray,\n            symbol: 'diamond',\n            symbolOffset: [0, '-50%'],\n            symbolSize: [barWidth, barWidth * 0.3],\n            silent: true,\n        },\n    ],\n};\n"}