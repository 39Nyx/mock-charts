{"code":"option = {\n    title: {\n        text: '一天用电量分布',\n        subtext: '纯属虚构',\n    },\n    tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n            type: 'cross',\n        },\n    },\n    toolbox: {\n        show: true,\n        feature: {\n            saveAsImage: {},\n        },\n    },\n    xAxis: {\n        type: 'category',\n        boundaryGap: false,\n        data: [\n            '00:00',\n            '01:15',\n            '02:30',\n            '03:45',\n            '05:00',\n            '06:15',\n            '07:30',\n            '08:45',\n            '10:00',\n            '11:15',\n            '12:30',\n            '13:45',\n            '15:00',\n            '16:15',\n            '17:30',\n            '18:45',\n            '20:00',\n            '21:15',\n            '22:30',\n            '23:45',\n        ],\n    },\n    yAxis: {\n        type: 'value',\n        axisLabel: {\n            formatter: '{value} W',\n        },\n        axisPointer: {\n            snap: true,\n        },\n    },\n    visualMap: [],\n    series: [\n        {\n            name: '用电量',\n            type: 'line',\n            smooth: true,\n            data: [300, 280, 250, 260, 270, 300, 550, 500, 400, 390, 380, 390, 400, 500, 600, 750, 800, 700, 600, 400]\n        },\n         {\n            name: '用电量',\n            type: 'line',\n            smooth: true,\n            data: [30, 28, 25, 26, 27, 30, 55, 50, 40, 39, 38, 39, 40, 50, 60, 75, 80, 70, 60, 40]\n        },\n    ],\n};\n\nlet startIndex = [];\nlet endIndex = [];\nmyChart.on('mousedown', function ({ data, dataIndex , name ,seriesIndex}) {\n    startIndex = [data, dataIndex , name];\n});\nmyChart.on('mouseup', function ({ data, dataIndex , name ,seriesIndex ,...args}) {\n    console.log(args);\n    const pieces = [];\n    endIndex = [data, dataIndex ,name];\n    if (startIndex[1] === endIndex[1]) {\n        pieces.push({\n            max: startIndex[1],\n            color: 'green',\n        });\n        pieces.push({\n            min: startIndex[1],\n            max: startIndex[1] + 1,\n            color: 'red',\n        });\n        pieces.push({\n            min: startIndex[1] + 1,\n            color: 'green',\n        });\n    } else if (startIndex[1] >= endIndex[1]) {\n        pieces.push({\n            max: endIndex[1],\n            color: 'green',\n        });\n        pieces.push({\n            min: endIndex[1],\n            max: startIndex[1],\n            color: 'red',\n        });\n        pieces.push({\n            min: startIndex[1],\n            color: 'green',\n        });\n    } else {\n        pieces.push({\n            max: startIndex[1],\n            color: 'green',\n        });\n        pieces.push({\n            min: startIndex[1],\n            max: endIndex[1],\n            color: 'red',\n        });\n        pieces.push({\n            min: endIndex[1],\n            color: 'green',\n        });\n    }\n    \n    option.series.forEach((serie, index) => {\n        const yIndex = serie.yAxisIndex;\n        let temp = JSON.parse(JSON.stringify(pieces));\n        temp[0].color = 'green';\n        temp[2].color = 'green';\n        option.visualMap.push({\n            show: false,\n            dimension: 0,\n            pieces: temp,\n            seriesIndex: index\n        });\n        serie.markArea = {\n            itemStyle: {\n                color: 'rgba(255, 173, 177, 0.4)',\n            },\n            data: [[{ name: '异常数据', xAxis: startIndex[2] }, { xAxis: endIndex[2] }]],\n        };\n        myChart.setOption(option);\n    });\n});\n"}