{"code":"option = {\n    title: {\n        text: 'tween.js'\n    },\n    tooltip: {},\n    xAxis: {\n        // data: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n    },\n    yAxis: {\n        // min:10\n    },\n    series: []\n};\n\nmyChart.setOption(option);\n\nfunction animate(time) {\n    let id = requestAnimationFrame(animate);\n    var result = TWEEN.update(time);\n    if (!result) cancelAnimationFrame(id);\n}\nrequestAnimationFrame(animate);\n\nvar coords = {\n    x: 0\n};\nvar data = [];\nvar num = 0;\nvar color = 'red';\n\nconst effects = [\n    'Back',\n    'Bounce',\n    'Circular',\n    'Cubic',\n    'Elastic',\n    'Exponential',\n    'Linear',\n    'Quadratic',\n    'Quartic',\n    'Quintic',\n    'Sinusoidal'\n];\n\nvar series = [];\n\nvar twns = [];\nfor (let i = 0; i < effects.length; i++) {\n    var twn = new TWEEN.Tween(coords).to({\n            x: 100\n        }, 3000).easing(TWEEN.Easing[effects[i]].Out || TWEEN.Easing[effects[i]].None) // Use an easing function to make the animation smooth.\n        .onUpdate(function(e) {\n            data.push([num, coords.x]);\n            num++;\n            myChart.setOption({\n                series:series.concat( [{\n                    type: 'line',\n                    data: data,\n                    itemStyle: {\n                        color: color\n                    },\n                    areaStyle: {}\n                }])\n            });\n        }).\n    onComplete(function() {\n        coords.x = 0;\n        series.push({\n            type: 'line',\n            data: data,\n            itemStyle: {\n                color: color\n            },\n            areaStyle: {}\n        });\n        data=[];\n        color = randomColor();\n\n    });\n    twns.push(twn);\n}\n\nfor (let i = 0; i < twns.length - 1; i++) {\n    twns[i].chain(twns[i + 1]);\n}\ntwns[0].start();"}