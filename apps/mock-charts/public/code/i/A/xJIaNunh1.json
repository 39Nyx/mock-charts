{"code":"var color = [\"#8D7FEC\", \"#4E81EC\", \"#DA5AB8\", \"#F87BE2\", \"#FF7CA9\"];\r\n\tvar xdata = ['电网建设', \"服务投诉\", \"供电质量\", \"停送电投诉\", '营业投诉'];\r\n\tvar ydata = [{\r\n\t        name: '电网建设',\r\n\t        value: 5\r\n\t    },\r\n\t    {\r\n\t        name: '服务投诉',\r\n\t        value: 4\r\n\t    },\r\n\t    {\r\n\t        name: '供电质量',\r\n\t        value: 14\r\n\t    },\r\n\t    {\r\n\t        name: '停送电投诉',\r\n\t        value: 8\r\n\t    },\r\n\t    {\r\n\t        name: '营业投诉',\r\n\t        value: 4\r\n\t    }\r\n\t];\r\n\toption = {\r\n\t    color: color,\r\n\t    backgroundColor:'#000',\r\n\t\ttitle:{\r\n\t        text:'总数\\n300',\r\n\t        left:'center',\r\n\t        top:'41%',\r\n\t        textStyle:{\r\n\t            color:'#fff',\r\n\t            fontWeight:'normal',\r\n\t            fontSize:14\r\n\t        }\r\n\t    },\r\n\t    series: [{\r\n\t        name: '投诉类型分布',\r\n\t        type: 'pie',\r\n\t        itemStyle: {\r\n\t            normal: {\r\n\t                borderWidth: 2,\r\n\t                borderColor: '#0B1832',\r\n\t            }\r\n\t        },\r\n\t        clockwise: false, //饼图的扇区是否是顺时针排布\r\n\t        minAngle: 20, //最小的扇区角度（0 ~ 360）\r\n\t        radius: [\"50%\", \"75%\"],\r\n\t        center: [\"50%\", \"45%\"],\r\n\t        avoidLabelOverlap:false,\r\n\t        hoverOffset:7,\r\n\t        label: {\r\n\t            normal: {\r\n\t                show: false,\r\n\t                position: 'center',\r\n\t                formatter: function(data) { // 设置圆饼图中间文字排版\r\n\t                    return   data.name  + \"\\n{a|\" + data.value +'}'  \r\n\t                }\r\n\t            },\r\n\t            emphasis: {\r\n\t                show: true, //文字至于中间时，这里需为true\r\n\t                textStyle: { //设置文字样式\r\n\t                    fontSize: '14',\r\n\t                    color: \"#fff\"\r\n\t                },\r\n\t                rich:{\r\n\t                    a:{\r\n\t                        fontSize:14,\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t\r\n\t        },\r\n\t\r\n\t        data: ydata\r\n\t    }]\r\n\t};\r\n\tmyChart.dispatchAction({\r\n\t    type: 'downplay',\r\n\t    seriesIndex: 0,\r\n\t    dataIndex: 0\r\n\t});\r\n\t// 当鼠标移入时，如果不是第一项，则把当前项置为选中，如果是第一项，则设置第一项为当前项\r\n\tmyChart.on('mouseover', function(e) {\r\n\t    myChart.dispatchAction({\r\n\t        type: 'downplay',\r\n\t        seriesIndex: 0,\r\n\t        dataIndex: 0\r\n\t    });\r\n\t     myChart.setOption({\r\n\t         title:{\r\n\t             show:false\r\n\t         }\r\n\t     });\r\n\t    if (e.dataIndex != index) {\r\n\t        myChart.dispatchAction({\r\n\t            type: 'downplay',\r\n\t            seriesIndex: 0,\r\n\t            dataIndex: index\r\n\t        });\r\n\t    }\r\n\t    if (e.dataIndex == 0) {\r\n\t        myChart.dispatchAction({\r\n\t            type: 'highlight',\r\n\t            seriesIndex: 0,\r\n\t            dataIndex: e.dataIndex\r\n\t        });\r\n\t    }\r\n\t});\r\n\t\r\n\t//当鼠标离开时，把当前项置为选中 \r\n\tmyChart.on('mouseout', function(e) {\r\n\t    index = e.dataIndex;\r\n\t    myChart.dispatchAction({\r\n\t        type: 'downplay',\r\n\t        seriesIndex: 0,\r\n\t        dataIndex: e.dataIndex\r\n\t    });\r\n\t     myChart.setOption({\r\n\t         title:{\r\n\t             show:true\r\n\t         }\r\n\t     });\r\n\t});"}