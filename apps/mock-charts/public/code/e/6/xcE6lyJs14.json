{"code":"const data = {\n    '种子/天使轮': [18, 26, 56, 104, 137, 108, 61, 12],\n    'PreA/A/A+轮': [8, 13, 58, 95, 139, 202, 157, 42],\n    'PreB/B/B+轮': [3, 10, 13, 27, 39, 64, 50, 20],\n    'C/C+轮': [1, 4, 7, 7, 10, 20, 32, 3],\n    'D-IPO轮': [2, 2, 4, 8, 2, 5, 13, 1],\n    '战略投资': [0, 1, 3, 7, 16, 26, 23, 2],\n}\n\nconst date = ['2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019'];\nlet da = [];\ndate.forEach((_,i) => {\n   const sum = Object.keys(data).map(v=>data[v][i]).reduce((s,i)=>s+=i,0)\n   da.push(sum)\n})\n\noption = {\n    backgroundColor: '#15253b',\n    color:[],\n    \"tooltip\": {\n        \"trigger\": \"axis\"\n    },\n    \"grid\": {\n        \"top\": 10,\n        \"left\": 10,\n        \"right\": 10,\n        \"bottom\": 10,\n        \"containLabel\": true\n    },\n    \"legend\": {\n        \"data\": Object.keys(data).map(v => ({\n            name: v,\n            icon: 'rect'\n        })),\n        \"itemWidth\": 12,\n        \"itemHeight\": 12,\n        \"top\": 10,\n        \"right\": 0,\n        \"textStyle\": {\n            \"color\": \"#ffffffb3\",\n            \"fontSize\": 15\n        },\n        \"type\": \"scroll\",\n        \"pageIconColor\": \"#aaa\",\n        \"pageIconInactiveColor\": \"#2f4554\",\n        \"pageTextStyle\": {\n            \"color\": \"#fff\"\n        }\n    },\n    \"color\": [\"#73D9FF\", \"#FF7C7C\", \"#FEF1AB\", \"#f3a633\", \"#d5392e\", \"#ADC6FF\"],\n    \"xAxis\": {\n        \"type\": \"category\",\n        \"data\": date,\n        \"axisTick\": {\n            \"show\": false\n        },\n        \"axisLine\": {\n            \"lineStyle\": {\n                \"color\": \"#a1aaff80\"\n            }\n        },\n        \"axisLabel\": {\n            \"color\": \"#ffffff99\"\n        }\n    },\n    \"yAxis\": {\n        \"type\": \"value\",\n        \"splitLine\": {\n            \"lineStyle\": {\n                \"color\": \"#ffffff1a\"\n            }\n        },\n        \"axisLine\": {\n            \"show\": false\n        },\n        \"axisTick\": {\n            \"show\": false\n        },\n        \"axisLabel\": {\n            \"color\": \"#ffffff99\"\n        }\n    },\n    \"series\": Object.keys(data).map(v => {\n        return {\n            type: 'bar',\n            data: data[v].map((j,i) => {\n                return j/da[i]\n            }),\n            \"barMaxWidth\": 14,\n            \"stack\": \"one\",\n            \"name\": v\n        }\n    }),\n    \"animationEasing\": \"quinticInOut\"\n}"}