{"code":"let linksSetTmp = [{\"name\":\"广州生物医药与健康研究院-广州生物医药与健康研究院\",\"num\":27},\r\n    {\"name\":\"北京基因组研究所-北京基因组研究所\",\"num\":8},\r\n    {\"name\":\"中国科学技术大学-中国科学技术大学\",\"num\":20},\r\n    {\"name\":\"中国科学技术大学-广州生物医药与健康研究院\",\"num\":4},\r\n    {\"name\":\"动物研究所-动物研究所\",\"num\":48},\r\n    {\"name\":\"生物化学与细胞生物学研究所-生物化学与细胞生物学研究所\",\"num\":5},\r\n    {\"name\":\"上海营养与健康研究院-上海营养与健康研究院\",\"num\":1},\r\n    {\"name\":\"动物研究所-北京基因组研究所\",\"num\":2},\r\n    {\"name\":\"中国科学技术大学-动物研究所\",\"num\":5},\r\n    {\"name\":\"广州生物医药与健康研究院-动物研究所\",\"num\":5},\r\n    {\"name\":\"苏州生物医学工程技术研究所-苏州生物医学工程技术研究所\",\"num\":3},\r\n    {\"name\":\"广州生物医药与健康研究院-北京基因组研究所\",\"num\":6},\r\n    {\"name\":\"中国科学技术大学-北京基因组研究所\",\"num\":4},\r\n    {\"name\":\"中国科学技术大学-上海营养与健康研究院\",\"num\":1},\r\n    {\"name\":\"广州生物医药与健康研究院-生物化学与细胞生物学研究所\",\"num\":7},\r\n    {\"name\":\"动物研究所-生物化学与细胞生物学研究所\",\"num\":1},\r\n    {\"name\":\"广州生物医药与健康研究院-苏州生物医学工程技术研究所\",\"num\":1}]\r\n\r\nfunction getIdxByName(arry, name) {\r\n    for (let i = 0; i< arry.length; i++) {\r\n        if (arry[i].id == name) {\r\n            return i\r\n        }\r\n    }\r\n    return -1\r\n}\r\n\r\nlet nodes = [{\"id\":\"广州生物医药与健康研究院\"},{\"id\":\"北京基因组研究所\"},{\"id\":\"中国科学技术大学\"},{\"id\":\"动物研究所\"},{\"id\":\"生物化学与细胞生物学研究所\"},{\"id\":\"上海营养与健康研究院\"},{\"id\":\"苏州生物医学工程技术研究所\"}]\r\nnodes.map((item)=>{\r\n    item.symbolSize = 40\r\n    item.category = item.id\r\n    item.name = item.id\r\n})\r\nlet nodesTmp = JSON.parse(JSON.stringify(nodes))\r\nlet linkList = []\r\nlet arry = null\r\nlet nodeItem = {}\r\nlet nodeList = JSON.parse(JSON.stringify(nodes))\r\nlinksSetTmp.map((item)=> {\r\n    arry = item.name.split(\"-\")\r\n    linkList.push({\r\n        source: arry[0],\r\n        target: arry[1]\r\n    })\r\n    if (item.num > 1) {\r\n        //如果自己到自己且不只一条\r\n        for (let i = 1; i < item.num; i++) {\r\n            addNodes(nodeList, {id: arry[1] + i, category: arry[1], symbolSize: 10, name: ''})\r\n            linkList.push({\r\n                source: arry[0],\r\n                target: arry[1] + i,\r\n            })\r\n         }\r\n        if (arry[0] == arry[1]) {\r\n             for (let i = 1; i < item.num; i++) {\r\n                addNodes(nodeList, {id: arry[1] + i, category: arry[1], symbolSize: 10, name: ''})\r\n                linkList.push({\r\n                    source: arry[0],\r\n                    target: arry[1] + i,\r\n                })\r\n             }\r\n        } else {\r\n            for (let i = 1; i < item.num; i++) {\r\n              addNodes(nodeList, {id: arry[1] + i, category: arry[1], symbolSize: 10, name: ''})\r\n                linkList.push({\r\n                    source: arry[0],\r\n                    target: arry[1] + i,\r\n                })\r\n             }\r\n        }\r\n    }\r\n})\r\n\r\nfunction addNodes(arry, cell) {\r\n    if (arry.some(function(res){\r\n       return res.id == cell.id\r\n    })) {\r\n        return\r\n    }\r\n    arry.push(cell)\r\n}\r\n// console.log(nodeList)\r\nmyChart.showLoading();\r\n    myChart.hideLoading();\r\n    option = {\r\n        legend: [{\r\n            data: nodes.map(function (a) {\r\n                return a.id;\r\n            })\r\n        }],\r\n        series : [\r\n            {\r\n                type: 'graph',\r\n                layout: 'force',\r\n                data: nodeList,\r\n                links: linkList,\r\n                categories: nodesTmp,\r\n                roam: true,\r\n                label: {\r\n                    position: 'right'\r\n                },\r\n                force: {\r\n                    repulsion: 100\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    myChart.setOption(option);"}