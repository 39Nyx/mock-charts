{"code":"app.title = '嵌套环形图';\n\nvar STEP = 5;\nvar TOTAL = 100;\n\nvar errorIndex = [];\n\n// generate data\nvar deviceData = [];\nfor (var c=0; c<5; c++) {\n    var deviceItemData = [];\n    for (var i=0; i<TOTAL; i++) {\n        var color = '#0c96e2';\n        var borderColor = i==0?'white':'#333';\n        var borderWidth = i==0?2:0.5;\n        if (Math.random() < 0.1) {\n            if (c == 4) {\n                color = 'black';\n            } else if (c == 2 || c == 3) {\n                errorIndex.push(i);\n                color = '#fa240d';\n            }\n        }\n        deviceItemData.push({\n            value: 1,\n            name: 'name'+i,\n            itemStyle: {\n                normal: {\n                    color: color,\n                    borderColor: '#333',\n                    borderWidth: 0.5,\n                }\n            }\n        })\n        \n    }\n    deviceData.push(deviceItemData);\n}\n\n\n\noption = {\n    backgroundColor: 'linear-gradient(#000135, #0252a3)',\n\n    tooltip: {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n    },\n\n    series: [\n        {\n            name:'Device',\n            type:'pie',\n            selectedMode: 'single',\n            radius: ['50%', '55%'],\n            //animation: false,\n\n            label: {\n                normal: {\n                    show: false,\n                    position: 'inner'\n                }\n            },\n            labelLine: {\n                normal: {\n                    show: false\n                }\n            },\n            data: deviceData[0]       \n            \n        },\n        {\n            name:'Device',\n            type:'pie',\n            radius: ['55%', '60%'],\n            //animation: false,\n            label: {\n              normal: {\n                  show: false\n              }  \n            },\n\n            data:deviceData[1]         \n            \n        },\n        {\n            name:'Device',\n            type:'pie',\n            radius: ['60%', '65%'],\n            //animation: false,\n            label: {\n              normal: {\n                  show: false\n              }  \n            },\n\n            data:deviceData[2]         \n            \n        },\n        {\n            name:'Device',\n            type:'pie',\n            radius: ['65%', '70%'],\n            //animation: false,\n            label: {\n              normal: {\n                  show: false\n              }  \n            },\n\n            data:deviceData[3]         \n            \n        },\n        {\n            name:'Device',\n            type:'pie',\n            radius: ['70%', '75%'],\n            //animation: false,\n            label: {\n              normal: {\n                  show: false\n              }  \n            },\n\n            data:deviceData[4]         \n            \n        }\n    ]\n};\n/*\nfunction rotate(){\n    for (var i=0; i<5; i++) {\n        option.series[i].data[0].itemStyle.normal.borderColor = '#333';\n        option.series[i].data[0].itemStyle.normal.borderWidth = 0.5;\n        deviceData[i].unshift(deviceData[i].pop());\n        option.series[i].data = deviceData[i];\n        option.series[i].data[0].itemStyle.normal.borderColor = 'white';\n        option.series[i].data[0].itemStyle.normal.borderWidth = 2;\n        \n\n    }\n}\n*/\nvar currentStep = 0;\nvar newStep = 0;\nfunction rotate () {\n    newStep = currentStep - STEP;\n    if (newStep < 0) {\n        newStep = TOTAL + newStep;\n    }\n    //console.log('startAngle: ', option.series[0].startAngle);\n    for (var i=0; i<5; i++) {\n        //option.series[i].data[currentStep].itemStyle.normal.borderColor = '#333';\n        //option.series[i].data[currentStep].itemStyle.normal.borderWidth = 0.5;\n        \n        if (option.series[i].startAngle !== undefined) {\n            \n            if (option.series[i].startAngle > 0) {\n                option.series[i].startAngle -= 360/TOTAL*STEP;\n            } else {\n                option.series[i].startAngle = 360 - 360/TOTAL*STEP;\n            }\n        } else {\n            option.series[i].startAngle = 90 - 360/TOTAL*STEP;\n        }\n        \n\n        //option.series[i].data[newStep].itemStyle.normal.borderColor = 'white';\n        //option.series[i].data[newStep].itemStyle.normal.borderWidth = 2;\n    }\n    \n    currentStep = newStep;\n}\n\nsetInterval(function(){\n    var currentIndex = errorIndex.indexOf(currentIndex);\n    if (currentIndex < 0) {\n        currentIndex = errorIndex[errorIndex.length - 1];\n    }\n\n    rotate();\n    myChart.setOption(option);\n}, 2000);"}