{"code":"var nodes = [{ \n        x: '5',\n        y: '5',\n        name: '服务器',\n        img: 'data-1547632686885-o5Rfi3tyk.png',\n        alarm: '产生告警了哦'\n    },\n    {\n        x: '3',\n        y: '0',\n        name: '存储设备1',\n        img: 'data-1547633192258-2EYYUDdcd.png'\n    },\n    {\n        x: '7',\n        y: '0',\n        name: '存储设备2',\n        img: 'data-1547633192258-2EYYUDdcd.png'\n    },\n    {\n        x: '0',\n        y: '10',\n        name: '防火墙',\n        img: 'data-1547633094304-08Q_2YEvH.png'\n    },\n    {\n        x: '5',\n        y: '10',\n        name: '网络设备1',\n        img: 'data-1547632915872-WZMUphq72.png',\n        alarm: '产生告警了哦'\n    },\n    {\n        x: '12',\n        y: '12',\n        name: '网络设备2',\n        img: 'data-1547632915872-WZMUphq72.png'\n    }\n]\nvar links = [{\n        source: '存储设备2',\n        target: '存储设备1',\n        name: '数据传输'\n    }, {\n        source: '存储设备1',\n        target: '服务器',\n        name: '数据传输'\n    },\n    {\n        source: '服务器',\n        target: '防火墙',\n        name: '访问'\n    },\n    {\n        source: '防火墙',\n        target: '网络设备1',\n        name: '访问'\n    },\n    {\n        source: '网络设备1',\n        target: '网络设备2',\n        name: '访问'\n    }\n]\nvar charts = {\n    nodes: [],\n    links: [],\n    linesData: []\n}\nvar dataMap = new Map()\nfor (var j = 0; j < nodes.length; j++) {\n    var x = parseInt(nodes[j].x)\n    var y = parseInt(nodes[j].y)\n    var node = {\n        name: nodes[j].name,\n        value: [x, y],\n        symbolSize: 50,\n        alarm: nodes[j].alarm,\n        symbol: 'image:///asset/get/s/' + nodes[j].img,\n        itemStyle: {\n            normal: {\n                color: '#12b5d0',\n            }\n        }\n    }\n    dataMap.set(nodes[j].name, [x, y])\n    charts.nodes.push(node)\n}\nfor (var i = 0; i < links.length; i++) {\n    var link = {\n        source: links[i].source,\n        target: links[i].target,\n        label: {\n            normal: {\n                show: true,\n                formatter: links[i].name\n            }\n        },\n        lineStyle: {\n            normal: {\n                color: '#00FFFF'\n            }\n        }\n    }\n    charts.links.push(link)\n    // 组装动态移动的效果数据\n    var lines = [{\n        coord: dataMap.get(links[i].source)\n    }, {\n        coord: dataMap.get(links[i].target)\n    }]\n    charts.linesData.push(lines)\n}\noption = {\n    title: {\n        text: '网络拓扑图',\n        textStyle: {\n            fontWeight: 'normal',\n            color: \"#00FFFF\",\n        }\n    },\n    backgroundColor: \"#1b2735\",\n    xAxis: {\n        show: false,\n        type: 'value'\n    },\n    yAxis: {\n        show: false,\n        type: 'value'\n    },\n    series: [{\n        type: 'graph',\n        layout: 'none',\n        coordinateSystem: 'cartesian2d',\n        symbolSize: 50,\n        label: {\n            normal: {\n                show: true,\n                position: 'bottom',\n                color: '#00FFFF'\n            }\n        },\n        lineStyle: {\n            normal: {\n                width: 2,\n                shadowColor: 'none'\n            }\n        },\n        edgeSymbolSize: 8,\n        data: charts.nodes,\n        links: charts.links,\n        itemStyle: {\n            normal: {\n                label: {\n                    show: true,\n                    formatter: function(item) {\n                        return item.data.name\n                    }\n                }\n            }\n        }\n    }, {\n        name: 'A',\n        type: 'lines',\n        coordinateSystem: 'cartesian2d',\n        effect: {\n            show: true,\n            trailLength: 0,\n            symbol: 'arrow',\n            color: '#00FFFF',\n            symbolSize: 8\n        },\n        data: charts.linesData\n    }]\n};\n// 用于告警的动态效果\nsetInterval(() => {\n    var dataI = []\n    for (var n = 0; n < nodes.length; n++) {\n        var alarm = nodes[n].alarm\n        if (alarm !== null && alarm !== '' && alarm !== undefined) {\n            option.series[0].data[n].symbolSize = 60\n            option.series[0].data[n].label = {\n                normal: {\n                    color: '#DC143C'\n                }\n            }\n            option.series[0].itemStyle.normal.label.formatter = function(item) {\n                if (item.data.alarm !== undefined) {\n                    return item.data.name + '\\n[ ' + item.data.alarm + ' ]'\n                } else {\n                    return item.data.name\n                }\n            }\n            dataI.push(n)\n        }\n    }\n    myChart.setOption(option)\n    setTimeout(() => {\n        for (var m = 0; m < dataI.length; m++) {\n            option.series[0].data[dataI[m]].symbolSize = 50\n            option.series[0].data[dataI[m]].label = {\n                normal: {\n                    color: '#00FFFF'\n                }\n            }\n            option.series[0].itemStyle.normal.label.formatter = function(item) {\n                return item.data.name\n            }\n        }\n        myChart.setOption(option)\n    }, 500)\n}, 1000)"}