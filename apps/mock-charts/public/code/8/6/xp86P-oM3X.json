{"code":"var uploadedDataURL = \"/asset/get/s/data-1641348469450-lnHzw8_eG.png\";\n\nvar uploadedDataURL1 = \"/asset/get/s/data-1641347891384-dznNRXRza.png\";\n\nvar uploadedDataURL2 = \"/asset/get/s/data-1641347883453-EYUAHtC5O.png\";\n\n\tlet erArr = [{\n\t    name: '计生办1',\n\t    times: 2,\n\t    type:2\n\t}, {\n\t    name: '计生办2',\n\t    times: 2,\n\t    type:2\n\t}, {\n\t    name: '计生办3',\n\t    times: 2,\n\t    type:2\n\t}, {\n\t    name: '计生办4',\n\t    times: 2,\n\t    type:2\n\t}, {\n\t    name: '计生办5',\n\t    times: 2,\n\t    type:2\n\t}, {\n\t    name: '计生办6',\n\t    times: 2,\n\t    type:2\n\t}, {\n\t    name: '计生办7',\n\t    times: 2,\n\t    type:2\n\t}, {\n\t    name: '计生办8',\n\t    times:2,\n\t    type:2\n\t},{\n\t    name: '计生办9',\n\t    times: 2,\n\t    type:2\n\t}];\n\tlet sumTimes = 0;\n\tsumTimes = erArr.reduce(function(prev,next){\n\t\t\n\t      return prev + next.times;\n\t    },0)\n\tlet color = ['#ffffff', '#36fff6', 'rgba(91, 84, 255, 1)', '#67f95f'];\n\tlet oneArr = [{\n\t    name: '数据中心',\n\t    times: sumTimes,\n\t    symbol: 'image://'+uploadedDataURL2,\n\t    symbolSize: 198,\n\t    color:\"#ffffff\",\n\t    itemStyle: {\n\t        color: {\n\t            type: 'linear',\n\t            x: 0,\n\t            y: 0,\n\t            x2: 0,\n\t            y2: 1,\n\t            colorStops: [{\n\t                offset: 0,\n\t                color: '#ffe93a' // 0% 处的颜色\n\t            }, {\n\t                offset: 1,\n\t                color: '#36fff6' // 100% 处的颜色\n\t            }],\n\t            global: false // 缺省为 false\n\t        }\n\t    }\n\t}];\n\n\tlet allArr = [...oneArr, ...erArr],\n\t    dataArr = [];\n\t// 点\n\tallArr.forEach((el, ind) => {\n\t\tvar imgUrl= \"image://\"+uploadedDataURL1;\n\t\tvar size = 122;\n\t\tvar show  = true;\n\t\tif(el.symbol){\n\t\t\timgUrl = el.symbol;\n\t\t\tsize = el.symbolSize;\n\t\t\tshow  = false;\n\t\t}\n\t     el.symbolSize = size;\n\t        el.symbol =imgUrl\n\t        el.itemStyle = {\n\t           \n\t        };\n\t    el.label = {\n\t        normal: {\n\t            show: show,\n\t           /* position: \"center\",*/\n\t            textStyle:{\n\t            \tfontSize: 25,\n\t\t            fontFamily: 'FZLanTingHei-B-GBK',\n\t\t            fontWeight: 400,\n\t\t            color: '#FFFFFF',\n\t\t            \n\t            }\n\t        },\n\t    };\n\n\t});\n\n\t// 圆形分区\n\tfunction group(arr, r) {\n\t    const newArray = [];\n\t    const {\n\t        length: arLen\n\t    } = arr;\n\t    arr.forEach((e, ind) => {\n\t        // 按角度均匀分布\n\t       const ang = 90 - (360 / arLen).toFixed(2) * (ind + 1);\n\t                const x = (Math.cos(ang * Math.PI / 180)).toFixed(2) * r;\n\t                const y = (Math.sin(ang * Math.PI / 180)).toFixed(2) * r;\n\t                const x1 = (Math.cos(ang * Math.PI / 180)).toFixed(2) * (r - 5);\n\t                const y1 = (Math.sin(ang * Math.PI / 180)).toFixed(2) * (r - 5);\n\t                const x0 = (Math.cos(ang * Math.PI / 180)).toFixed(2) * (r - 30);\n\t                const y0 = (Math.sin(ang * Math.PI / 180)).toFixed(2) * (r - 30);\n\t                e.value = [x.toFixed(2), y.toFixed(2)]\n\t                e.twoPoint = [[x1.toFixed(2), y1.toFixed(2)], [x0.toFixed(2), y0.toFixed(2)]];\n\t        newArray.push(e);\n\t    });\n\t    return newArray;\n\t}\n\n\t// 线配置\n\tfunction linesConfig(arr) {\n\t    const [dataArr, targetCoord] = [\n\t        [],\n\t        [0, 0]\n\t    ];\n\t    arr.forEach((el) => {\n\t        function getFormatItem(start, end) {\n\t                    let item = [\n\t                        {coord: el.twoPoint[start]},// 起点\n\t                        {\n\t                            coord: el.twoPoint[end],\n\t                            lineStyle: {\n\t                                color: color[el.type],\n\t                                curveness: el.type === 3 ? 0.1 : 0,\n\t                            },\n\t                            effect: {\n\t                                color: color[el.type],\n\t                                symbol:\"image://\"+uploadedDataURL,\n\t                                symbolSize: [18 * 0.7,34 * 0.7]\n\t                            }\n\t                        }, // 终点\n\t                    ]\n\t                    return item\n\t                }\n\t                switch (el.type) {\n\t                    case 0:\n\t                        break;\n\t                    case 1:\n\t                        dataArr.push(getFormatItem(0, 1));\n\t                        break;\n\t                    case 2:\n\t                        dataArr.push(getFormatItem(1, 0));\n\t                        break;\n\t                    case 3:\n\t                        dataArr.push(getFormatItem(0, 1));\n\t                        dataArr.push(getFormatItem(1, 0));\n\t                        break;\n\t                }\n\t    });\n\t    return dataArr;\n\t}\n\n\t// 点分布\n\toneArr = group(oneArr, 0);\n\terArr = group(erArr, 40);\n\n\tallArr = [...oneArr, ...erArr];\n\t// 线坐标和配置\n\tdataArr = linesConfig(allArr);\n\n\tfunction generateData(totalNum, bigvalue, smallvalue, color,width) {\n\t    let dataArr = [];\n\t    for (var i = 0; i < totalNum; i++) {\n\t        if (i % 2 === 0) {\n\t            dataArr.push({\n\t                name: (i + 1).toString(),\n\t                value: bigvalue,\n\t                itemStyle: {\n\t                \n\t                    normal: {\n\t                        color: color,\n\t                        borderWidth: width,\n\t                        borderRadius:20\n\t                    }\n\t                }\n\t            });\n\t        } else {\n\t            dataArr.push({\n\t                name: (i + 1).toString(),\n\t                value: smallvalue,\n\t                itemStyle: {\n\t                    normal: {\n\t                        color: \"rgba(0,0,0,0)\",\n\t                        borderWidth: 0,\n\t                        \"borderRadius\":20,\n\t                    }\n\t                }\n\t            });\n\t        }\n\n\t    }\n\t    return dataArr;\n\t}\n\n\tlet dolitData = generateData(100, 25, 20, 'rgb(126,190,255)',5);\n\tlet threeData = generateData(6,30, 10, 'rgba(28, 211, 230, 1)',5);\n\tlet fourData = generateData(12,80, 10, 'rgba(91, 84, 255, 1)',1);\n\tlet radius1 = ['41%', '38%'];\n\tlet radius2 = ['40%', '39%'];\n\tlet height =  document.body.clientHeight;\n\tif(height < 1000){\n\t\tradius1 = ['43%', '40%'];\n\t\tradius2 = ['42%', '41%'];\n\t}\n\tfunction getOption(startAngle, radius,startAngle2) {\n\t    let option = {\n\t        backgroundColor:\"rgba(0,0,0,1)\",\n\t    \t\ttooltip:{\n\t                formatter:function(param){ \n\t                \tvar str = param.name+' : '+param.data.times+'次';\n\t                \t\treturn str;\n\t                },\n\t                \n\t                textStyle:{\n\t                \tfontSize: 20,\n\t                },\n\t                backgroundColor  : 'rgba(0,0,0,0.7)',\n        \t        textStyle:{\n        \t        \tcolor:\"#ffffff\"\n        \t        },\n        \t        borderWidth :0\n        \t },\n\t    \t\t  title: {\n\t    \t            text: '数据中心',\n\t    \t            left: 'center',\n\t    \t            top:'center',\n\t    \t            textStyle: {\n\t    \t                color: '#fff',\n\t    \t                fontSize:50\n\t    \t            }\n\t    \t        },\n\t        xAxis: {\n\t            show: false,\n\t            type: \"value\",\n\t            max: 50,\n\t            min: -51,\n\t        },\n\t        grid: {\n\t            top: 10,\n\t            bottom: 10,\n\t            left: 10,\n\t            right: 10,\n\t        },\n\t        yAxis: {\n\t            show: false,\n\t            type: \"value\",\n\t            max: 50,\n\t            min: -50,\n\t        },\n\t        series: [{\n\t                name: \"节点\",\n\t                type: \"graph\",\n\t                silent: false,\n\t                hoverAnimation: false, // 鼠标悬浮高亮\n\t                cursor: 'default',\n\t                coordinateSystem: \"cartesian2d\",\n\t                z: 3,\n\t                itemStyle: {\n\t                    normal: {\n\t                        shadowColor: \"none\",\n\t                    },\n\t                },\n\t                emphasis: {\n\t                    scale: false\n\t                },\n\t                data: allArr,\n\t                \n\t            },\n\t            {\n\t                name: \"线图\",\n\t                type: \"lines\",\n\t                hoverAnimation: false,\n\t                silent: false,\n\t                cursor: 'default',\n\t                coordinateSystem: \"cartesian2d\",\n\t                polyline: false, // 多线段\n\t                z: 1,\n\t                lineStyle: {\n\t                    width: 2,\n\t                    type: 'dashed',\n\t                    curveness: 0,\n\t                },\n\t                effect: {\n\t                    show: true,\n\t                    period: 8, //箭头指向速度，值越小速度越快\n\t                    trailLength: 0, //特效尾迹长度[0,1]值越大，尾迹越长重\n\t                    symbol: 'arrow', //箭头图标\n\t                    symbolSize: 6\n\t                },\n\t                emphasis: {\n\t                    lineStyle: {\n\t                        type: 'dashed',\n\t                    }\n\t                },\n\t                data: dataArr,\n\t                tooltip:{\n\t                \tshow:false\n\t                }\n\t            }, {\n\t                type: 'pie',\n\t                name: '旋转圆',\n\t                zlevel: 20,\n\t                silent: true,\n\t                radius: radius1,\n\t                hoverAnimation: false,\n\t                startAngle: startAngle,\n\t                data: threeData,\n\t                label: {\n\t                    normal: {\n\t                        show: false\n\t                    },\n\t                },\n\t                labelLine: {\n\t                    normal: {\n\t                        show: false\n\t                    }\n\t                },\n\t                tooltip:{\n\t                \tshow:false\n\t                }\n\t            }, {\n\t                type: 'pie',\n\t                name: '旋转圆',\n\t                zlevel: 19,\n\t                silent: true,\n\t                radius: radius2,\n\t                hoverAnimation: false,\n\t                startAngle: startAngle2,\n\t                data: fourData,\n\t                label: {\n\t                    normal: {\n\t                        show: false\n\t                    },\n\t                },\n\t                labelLine: {\n\t                    normal: {\n\t                        show: false\n\t                    }\n\t                },\n\t                tooltip:{\n\t                \tshow:false\n\t                }\n\t            }\n\t          \n\t        ],\n\t    };\n\t    \n\t    return option;\n\t}\n\t\n\tgetOption()\n\n\tlet startAngle = 50; // 初始旋转角度\n\tlet startAngle2 = 50; // 初始旋转角度\n\tlet [minradius, radius, maxradius] = [24, 24, 28] // 初始缩放尺寸\n\t        let isBig = true // 缩放动画 标识\n\n\t        function draw() {\n\t            startAngle = startAngle - 5\n\t            startAngle2 = startAngle2 + 5;\n\t            if (isBig) {\n\t                radius = radius + 0.5\n\t                if (radius > maxradius) {\n\t                    isBig = false\n\t                }\n\t            } else {\n\t                radius = radius - 0.5\n\t                if (radius < minradius) {\n\t                    isBig = true\n\t                }\n\t            }\n\t            let option = getOption(startAngle, radius,startAngle2)\n\t            myChart.setOption(option, true);\n\t        }\n\n\ttimer = setInterval(draw, 200);\n"}