{"code":"let dataList = [220, 320, 151];\nlet colors = ['#008CFF', '#FFC502', '#FF6B5D'];\n\noption = {\n    backgroundColor: '#fff',\n    grid:{\n        left: '3%',\n        right: '7%',\n        containLabel:true\n    },\n    xAxis: {\n        splitLine: {\n            show: false,\n        },\n        axisLabel: {\n            show: false,\n        },\n    },\n    yAxis: [\n        {\n            inverse: true,\n            axisLine: 'none',\n            axisTick: 'none',\n            axisLabel: {\n                margin: 80,\n                textStyle: {\n                    fontSize: 16,\n                    color: '#666',\n                    align: 'left',\n                },\n            },\n            data: ['特别感谢', '满意', '不满意'],\n        },\n        {\n            type: 'category',\n            inverse: true,\n            axisTick: 'none',\n            axisLine: 'none',\n            show: true,\n            axisLabel: {\n                textStyle: {\n                    fontSize: 24,\n                    color: '#222222',\n                },\n            },\n            data: dataList,\n        },\n    ],\n    series: [\n        {\n            type: 'bar',\n            barGap: '-100%',\n            color: ['red', 'green'],\n            barWidth: 14,\n            inverse: true,\n            zlevel: 99,\n            showBackground: true,\n            backgroundStyle: {\n                color: '#F5F5FC',\n                borderRadius: 50,\n            },\n            data: dataList.map((data, i) => {\n                return {\n                    value: data,\n                    itemStyle: {\n                        color: colors[i],\n                        borderRadius: 50,\n                    },\n                    label: {\n                        normal: {\n                            backgroundColor: colors[i],\n                            formatter:(params)=>{\n                                let count = dataList.reduce((a,b)=>a+b);\n                                let per =( params.value / count * 100).toFixed(1)\n                                return `${per} % `\n                            }\n                        },\n                    },\n                };\n            }),\n            label: {\n                normal: {\n                    show: true,\n                    position: 'right',\n                    offset: [-20, -50],\n                    padding: [4,12],\n                    lineHeight:32,\n                    color:'#fff',\n                    fontSize:18,\n                    borderRadius:5\n                },\n            },\n        },\n        {\n            type: 'pictorialBar',\n            zlevel: 100,\n            symbol: 'circle',\n            symbolSize: '16',\n            symbolOffset: [50, 0],\n            symbolPosition: 'end',\n            data: dataList.map((data, i) => {\n                return {\n                    value: data,\n                    itemStyle: {\n                        color: '#fff',\n                        borderColor: colors[i],\n                        borderWidth: 100,\n                    },\n                };\n            }),\n        },\n    ],\n};\n"}