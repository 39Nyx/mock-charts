{"code":"var hours = ['step-0', 'step-2', 'step-3', 'step-4'];\r\nvar days = ['team1', 'team2', 'team3'];\r\n\r\nvar data = [\r\n    [0, 0, 100],\r\n    [0, 1, 100],\r\n    [0, 2, 0],\r\n    [0, 3, 0],\r\n    [1, 0, 100],\r\n    [1, 1, 100],\r\n    [1, 2, 0],\r\n    [1, 3, 0],\r\n    [2, 0, 100],\r\n    [2, 1, 100],\r\n    [2, 2, 0],\r\n    [2, 3, 100],\r\n\r\n\r\n];\r\n\r\noption = {\r\n    tooltip: {\r\n        position: 'top'\r\n    },\r\n    title: [],\r\n    singleAxis: [],\r\n    series: []\r\n};\r\n\r\n\r\n// var links = graphData.map(function (item, idx) {\r\n//     return {\r\n//         source: idx,\r\n//         target: idx + 1\r\n//     };\r\n// });\r\n// links.pop();\r\n\r\n\r\necharts.util.each(days, function(day, idx) {\r\n    console.log('idx----------', idx)\r\n    option.title.push({\r\n        textBaseline: 'middle',\r\n        top: (idx + 0.5) * 100 / 3 + '%',\r\n        text: day\r\n    });\r\n    option.singleAxis.push({\r\n        left: 150,\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: hours,\r\n        top: (idx * 100 / 3 + 5) + '%',\r\n        height: (100 / 3 - 10) + '%',\r\n        axisLabel: {\r\n            interval: 0\r\n        },\r\n        axisLine:{show: false},\r\n        splitLine:{show: false}\r\n    });\r\n    option.series.push({\r\n        singleAxisIndex: idx,\r\n        coordinateSystem: 'singleAxis',\r\n        type: 'effectScatter',\r\n        rippleEffect:{\r\n            period:10,\r\n            scale:1.5,\r\n            brushType:'fill',\r\n        },\r\n        data: [],\r\n        links: [],\r\n        symbolSize: function(dataItem) {\r\n            return dataItem[1];\r\n        },\r\n        axisTick:{show: false}\r\n    });\r\n});\r\n\r\necharts.util.each(data, function(dataItem, idx) {\r\n    console.log(dataItem, idx)\r\n    option.series[dataItem[0]].data.push([dataItem[1], dataItem[2]]);\r\n    option.series[dataItem[0]].links.push({\r\n        source: idx,\r\n        target: idx + 1\r\n    })\r\n\r\n\r\n});\r\n\r\nconsole.log(option.series[0]);\r\n\r\n// option.series[0].markLine = {\r\n//     lineStyle: {\r\n//         type: 'dashed'\r\n//     },\r\n//     data: [{\r\n//             name: '两个坐标之间的标线',\r\n//             coord: [0, 0]\r\n//         },\r\n//         {\r\n//             coord: [2, 3]\r\n//         }\r\n//     ]\r\n// };\r\n\r\n\r\n\r\n\r\n\r\nconsole.log(option)"}